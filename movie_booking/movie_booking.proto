syntax = "proto3";

package moviebooking;

option go_package = "./movie_booking";

// Movie Service definition
service MovieService {
    rpc RegisterMovie (RegisterMovieRequest) returns (RegisterMovieResponse);
    rpc UpdateMovie(UpdateMovieRequest) returns (UpdateMovieResponse);
    rpc ListMovies (ListMoviesRequest) returns (ListMoviesResponse);
    rpc GetMovieDetails(GetMovieDetailsRequest) returns (GetMovieDetailsResponse);
    rpc DeleteMovie (DeleteMovieRequest) returns (DeleteMovieResponse);
}

// Theatre Service definition
service TheatreService {
    // Theater type
    rpc AddTheaterType(AddTheaterTypeRequest)returns (AddTheaterTypeResponse);
    rpc DeleteTheaterTypeByID(DeleteTheaterTypeRequest)returns(DeleteTheaterTypeResponse);
    rpc DeleteTheaterTypeByName(DeleteTheaterTypeByNameRequest)returns (DeleteTheaterTypeByNameResponse);
    rpc GetTheaterTypeByID(GetTheaterTypeByIDRequest)returns (GetTheaterTypeByIDResponse);
    rpc GetTheaterTypeByName(GetTheaterTypeByNameRequest)returns(GetTheaterTypeBynameResponse);
    rpc UpdateTheaterType(UpdateTheaterTypeRequest)returns(UpdateTheaterTypeResponse);
    rpc ListTheaterTypes(ListTheaterTypesRequest)returns(ListTheaterTypeResponse);

    // Screen type
    rpc AddScreenType(AddScreenTypeRequest) returns (AddScreenTypeResponse);
    rpc DeleteScreenTypeByID(DeleteScreenTypeRequest) returns (DeleteScreenTypeResponse);
    rpc DeleteScreenTypeByName(DeleteScreenTypeByNameRequest) returns (DeleteScreenTypeByNameResponse);
    rpc GetScreenTypeByID(GetScreenTypeByIDRequest) returns (GetScreenTypeByIDResponse);
    rpc GetScreenTypeByName(GetScreenTypeByNameRequest) returns (GetScreenTypeByNameResponse);
    rpc UpdateScreenType(UpdateScreenTypeRequest) returns (UpdateScreenTypeResponse);
    rpc ListScreenTypes(ListScreenTypesRequest) returns (ListScreenTypesResponse);

    // Seat category
    rpc AddSeatCategory(AddSeatCategoryRequest) returns (AddSeatCategoryResponse);
    rpc DeleteSeatCategoryByID(DeleteSeatCategoryRequest) returns (DeleteSeatCategoryResponse);
    rpc DeleteSeatCategoryByName(DeleteSeatCategoryByNameRequest) returns (DeleteSeatCategoryByNameResponse);
    rpc GetSeatCategoryByID(GetSeatCategoryByIDRequest) returns (GetSeatCategoryByIDResponse);
    rpc GetSeatCategoryByName(GetSeatCategoryByNameRequest) returns (GetSeatCategoryByNameResponse);
    rpc UpdateSeatCategory(UpdateSeatCategoryRequest) returns (UpdateSeatCategoryResponse);
    rpc ListSeatCategories(ListSeatCategoriesRequest) returns (ListSeatCategoriesResponse);

    // Theater 
    rpc RegisterTheatre (RegisterTheatreRequest) returns (RegisterTheatreResponse);
    rpc UpdateTheatre(UpdateTheatreRequest) returns (UpdateTheatreResponse);
    rpc DeleteTheatre(DeleteTheatreRequest) returns (DeleteTheatreResponse);
}

// Movie related messages
message RegisterMovieRequest {
    string title = 1;
    string description = 2;
    int32 duration = 3; 
    string genre = 4;
    string release_date = 5; 
    float rating = 6;
    string Language = 7;
}

message RegisterMovieResponse {
    uint32 movie_id = 1;
    string message = 2;
}

message UpdateMovieRequest {
    uint32 movie_id = 1;
    string title = 2;
    string description = 3;
    int32 duration = 4;
    string genre = 5;
    string release_date = 6;
    float rating = 7;
    string language = 8;
}

message UpdateMovieResponse {
    string message = 1;
}

message ListMoviesRequest {
    int32 page = 1;
    int32 page_size = 2;
}

message Movie {
    uint32 movie_id = 1;
    string title = 2;
    string description = 3;
    int32 duration = 4;
    string genre = 5;
    string release_date = 6;
    float rating = 7;
    string language = 8;
}

message ListMoviesResponse {
    repeated Movie movies = 1;
}

message GetMovieDetailsRequest {
    uint32 movie_id = 1;
}

message GetMovieDetailsResponse {
    Movie movie = 1;
}

message DeleteMovieRequest {
    uint32 movie_id = 1;
}

message DeleteMovieResponse {
    string message = 1;
}

// Theatres related messages

message RegisterTheatreRequest {
    string name = 1;
    string location = 2;
    int32 number_of_screens = 3;
    uint32 owner_id = 4;
}

message RegisterTheatreResponse {
    uint32 theatre_id = 1;
    string message = 2;
}

message UpdateTheatreRequest {
    uint32 theatre_id = 1;
    string name = 2;
    string location = 3;
    int32 number_of_screens = 4;
    uint32 owner_id = 5;
}

message UpdateTheatreResponse {
    string message = 1;
}

message DeleteTheatreRequest {
    uint32 theatre_id = 1;
}

message DeleteTheatreResponse {
    string message = 1;
}

// Theater types replated messages
message AddTheaterTypeRequest{
    string theater_type_name = 1;
}

message AddTheaterTypeResponse{
    string message = 1;
}

message DeleteTheaterTypeRequest{
    int32 theater_type_id = 1;
}

message DeleteTheaterTypeResponse{
    string message = 1 ;
}

message DeleteTheaterTypeByNameRequest{
    string name = 1;
}

message DeleteTheaterTypeByNameResponse{
    string message = 1;
}

message GetTheaterTypeByIDRequest{
    int32 theater_type_id = 1;
}

message GetTheaterTypeByIDResponse{
    TheaterType theater_type = 1;
}

message TheaterType{
    int32 id = 1;
    string theater_type_name = 2;
}

message GetTheaterTypeByNameRequest{
    string name = 1;
}

message GetTheaterTypeBynameResponse{
    TheaterType theater_type = 1;
}

message UpdateTheaterTypeRequest{
    int32 id =1;
    string theater_type_name = 2;
}

message UpdateTheaterTypeResponse{
    string message = 1;
}

message ListTheaterTypesRequest{
}

message ListTheaterTypeResponse{
    repeated TheaterType theater_types = 1;
}

// Screen types related messages
message AddScreenTypeRequest {
    string screen_type_name = 1;
}

message AddScreenTypeResponse {
    string message = 1;
}

message DeleteScreenTypeRequest {
    int32 screen_type_id = 1;
}

message DeleteScreenTypeResponse {
    string message = 1;
}

message DeleteScreenTypeByNameRequest {
    string name = 1;
}

message DeleteScreenTypeByNameResponse {
    string message = 1;
}

message GetScreenTypeByIDRequest {
    int32 screen_type_id = 1;
}

message GetScreenTypeByIDResponse {
    ScreenType screen_type = 1;
}

message ScreenType {
    int32 id = 1;
    string screen_type_name = 2;
}

message GetScreenTypeByNameRequest {
    string name = 1;
}

message GetScreenTypeByNameResponse {
    ScreenType screen_type = 1;
}

message UpdateScreenTypeRequest {
    int32 id = 1;
    string screen_type_name = 2;
}

message UpdateScreenTypeResponse {
    string message = 1;
}

message ListScreenTypesRequest {
}

message ListScreenTypesResponse {
    repeated ScreenType screen_types = 1;
}

// seat category related messages
message SeatCategory {
    int32 id = 1;
    string seat_category_name = 2;
    double seat_category_price = 3;
}

message AddSeatCategoryRequest {
    SeatCategory seat_category = 1;
}

message AddSeatCategoryResponse {
    string message = 1;
}

message DeleteSeatCategoryRequest {
    int32 seat_category_id = 1;
}

message DeleteSeatCategoryResponse {
    string message = 1;
}

message DeleteSeatCategoryByNameRequest {
    string name = 1;
}

message DeleteSeatCategoryByNameResponse {
    string message = 1;
}

message GetSeatCategoryByIDRequest {
    int32 seat_category_id = 1;
}

message GetSeatCategoryByIDResponse {
    SeatCategory seat_category = 1;
}

message GetSeatCategoryByNameRequest {
    string name = 1;
}

message GetSeatCategoryByNameResponse {
    SeatCategory seat_category = 1;
}

message UpdateSeatCategoryRequest {
    int32 id = 1;
    SeatCategory seat_category = 2;
}

message UpdateSeatCategoryResponse {
    string message = 1;
}

message ListSeatCategoriesRequest {}

message ListSeatCategoriesResponse {
    repeated SeatCategory seat_categories = 1;
}
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: movie_booking/movie_booking.proto

package movie_booking

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Movie Schedule related messages
type MovieSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MovieId    int32 `protobuf:"varint,2,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
	TheaterId  int32 `protobuf:"varint,3,opt,name=theater_id,json=theaterId,proto3" json:"theater_id,omitempty"`
	ShowtimeId int32 `protobuf:"varint,4,opt,name=showtime_id,json=showtimeId,proto3" json:"showtime_id,omitempty"`
}

func (x *MovieSchedule) Reset() {
	*x = MovieSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieSchedule) ProtoMessage() {}

func (x *MovieSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieSchedule.ProtoReflect.Descriptor instead.
func (*MovieSchedule) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{0}
}

func (x *MovieSchedule) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MovieSchedule) GetMovieId() int32 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

func (x *MovieSchedule) GetTheaterId() int32 {
	if x != nil {
		return x.TheaterId
	}
	return 0
}

func (x *MovieSchedule) GetShowtimeId() int32 {
	if x != nil {
		return x.ShowtimeId
	}
	return 0
}

type AddMovieScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieSchedule *MovieSchedule `protobuf:"bytes,1,opt,name=movie_schedule,json=movieSchedule,proto3" json:"movie_schedule,omitempty"`
}

func (x *AddMovieScheduleRequest) Reset() {
	*x = AddMovieScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMovieScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMovieScheduleRequest) ProtoMessage() {}

func (x *AddMovieScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMovieScheduleRequest.ProtoReflect.Descriptor instead.
func (*AddMovieScheduleRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{1}
}

func (x *AddMovieScheduleRequest) GetMovieSchedule() *MovieSchedule {
	if x != nil {
		return x.MovieSchedule
	}
	return nil
}

type AddMovieScheduleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddMovieScheduleResponse) Reset() {
	*x = AddMovieScheduleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMovieScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMovieScheduleResponse) ProtoMessage() {}

func (x *AddMovieScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMovieScheduleResponse.ProtoReflect.Descriptor instead.
func (*AddMovieScheduleResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{2}
}

func (x *AddMovieScheduleResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddMovieScheduleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UpdateMovieScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieSchedule *MovieSchedule `protobuf:"bytes,1,opt,name=movie_schedule,json=movieSchedule,proto3" json:"movie_schedule,omitempty"`
}

func (x *UpdateMovieScheduleRequest) Reset() {
	*x = UpdateMovieScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMovieScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMovieScheduleRequest) ProtoMessage() {}

func (x *UpdateMovieScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMovieScheduleRequest.ProtoReflect.Descriptor instead.
func (*UpdateMovieScheduleRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateMovieScheduleRequest) GetMovieSchedule() *MovieSchedule {
	if x != nil {
		return x.MovieSchedule
	}
	return nil
}

type UpdateMovieScheduleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateMovieScheduleResponse) Reset() {
	*x = UpdateMovieScheduleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMovieScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMovieScheduleResponse) ProtoMessage() {}

func (x *UpdateMovieScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMovieScheduleResponse.ProtoReflect.Descriptor instead.
func (*UpdateMovieScheduleResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateMovieScheduleResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateMovieScheduleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetAllMovieScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheaterId int32 `protobuf:"varint,1,opt,name=theater_id,json=theaterId,proto3" json:"theater_id,omitempty"`
}

func (x *GetAllMovieScheduleRequest) Reset() {
	*x = GetAllMovieScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllMovieScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllMovieScheduleRequest) ProtoMessage() {}

func (x *GetAllMovieScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllMovieScheduleRequest.ProtoReflect.Descriptor instead.
func (*GetAllMovieScheduleRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{5}
}

func (x *GetAllMovieScheduleRequest) GetTheaterId() int32 {
	if x != nil {
		return x.TheaterId
	}
	return 0
}

type GetAllMovieScheduleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieSchedules []*MovieSchedule `protobuf:"bytes,1,rep,name=movie_schedules,json=movieSchedules,proto3" json:"movie_schedules,omitempty"`
	Message        string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetAllMovieScheduleResponse) Reset() {
	*x = GetAllMovieScheduleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllMovieScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllMovieScheduleResponse) ProtoMessage() {}

func (x *GetAllMovieScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllMovieScheduleResponse.ProtoReflect.Descriptor instead.
func (*GetAllMovieScheduleResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{6}
}

func (x *GetAllMovieScheduleResponse) GetMovieSchedules() []*MovieSchedule {
	if x != nil {
		return x.MovieSchedules
	}
	return nil
}

func (x *GetAllMovieScheduleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetMovieScheduleByMovieIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieId int32 `protobuf:"varint,1,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
}

func (x *GetMovieScheduleByMovieIdRequest) Reset() {
	*x = GetMovieScheduleByMovieIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMovieScheduleByMovieIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMovieScheduleByMovieIdRequest) ProtoMessage() {}

func (x *GetMovieScheduleByMovieIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMovieScheduleByMovieIdRequest.ProtoReflect.Descriptor instead.
func (*GetMovieScheduleByMovieIdRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{7}
}

func (x *GetMovieScheduleByMovieIdRequest) GetMovieId() int32 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

type GetMovieScheduleByMovieIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieSchedules []*MovieSchedule `protobuf:"bytes,1,rep,name=movie_schedules,json=movieSchedules,proto3" json:"movie_schedules,omitempty"`
	Message        string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetMovieScheduleByMovieIdResponse) Reset() {
	*x = GetMovieScheduleByMovieIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMovieScheduleByMovieIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMovieScheduleByMovieIdResponse) ProtoMessage() {}

func (x *GetMovieScheduleByMovieIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMovieScheduleByMovieIdResponse.ProtoReflect.Descriptor instead.
func (*GetMovieScheduleByMovieIdResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{8}
}

func (x *GetMovieScheduleByMovieIdResponse) GetMovieSchedules() []*MovieSchedule {
	if x != nil {
		return x.MovieSchedules
	}
	return nil
}

func (x *GetMovieScheduleByMovieIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetMovieScheduleByTheaterIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheaterId int32 `protobuf:"varint,1,opt,name=theater_id,json=theaterId,proto3" json:"theater_id,omitempty"`
}

func (x *GetMovieScheduleByTheaterIdRequest) Reset() {
	*x = GetMovieScheduleByTheaterIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMovieScheduleByTheaterIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMovieScheduleByTheaterIdRequest) ProtoMessage() {}

func (x *GetMovieScheduleByTheaterIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMovieScheduleByTheaterIdRequest.ProtoReflect.Descriptor instead.
func (*GetMovieScheduleByTheaterIdRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{9}
}

func (x *GetMovieScheduleByTheaterIdRequest) GetTheaterId() int32 {
	if x != nil {
		return x.TheaterId
	}
	return 0
}

type GetMovieScheduleByTheaterIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieSchedules []*MovieSchedule `protobuf:"bytes,1,rep,name=movie_schedules,json=movieSchedules,proto3" json:"movie_schedules,omitempty"`
	Message        string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetMovieScheduleByTheaterIdResponse) Reset() {
	*x = GetMovieScheduleByTheaterIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMovieScheduleByTheaterIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMovieScheduleByTheaterIdResponse) ProtoMessage() {}

func (x *GetMovieScheduleByTheaterIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMovieScheduleByTheaterIdResponse.ProtoReflect.Descriptor instead.
func (*GetMovieScheduleByTheaterIdResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{10}
}

func (x *GetMovieScheduleByTheaterIdResponse) GetMovieSchedules() []*MovieSchedule {
	if x != nil {
		return x.MovieSchedules
	}
	return nil
}

func (x *GetMovieScheduleByTheaterIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetMovieScheduleByMovieIdAndTheaterIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieId   int32 `protobuf:"varint,1,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
	TheaterId int32 `protobuf:"varint,2,opt,name=theater_id,json=theaterId,proto3" json:"theater_id,omitempty"`
}

func (x *GetMovieScheduleByMovieIdAndTheaterIdRequest) Reset() {
	*x = GetMovieScheduleByMovieIdAndTheaterIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMovieScheduleByMovieIdAndTheaterIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMovieScheduleByMovieIdAndTheaterIdRequest) ProtoMessage() {}

func (x *GetMovieScheduleByMovieIdAndTheaterIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMovieScheduleByMovieIdAndTheaterIdRequest.ProtoReflect.Descriptor instead.
func (*GetMovieScheduleByMovieIdAndTheaterIdRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{11}
}

func (x *GetMovieScheduleByMovieIdAndTheaterIdRequest) GetMovieId() int32 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

func (x *GetMovieScheduleByMovieIdAndTheaterIdRequest) GetTheaterId() int32 {
	if x != nil {
		return x.TheaterId
	}
	return 0
}

type GetMovieScheduleByMovieIdAndTheaterIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieSchedules []*MovieSchedule `protobuf:"bytes,1,rep,name=movie_schedules,json=movieSchedules,proto3" json:"movie_schedules,omitempty"`
	Message        string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetMovieScheduleByMovieIdAndTheaterIdResponse) Reset() {
	*x = GetMovieScheduleByMovieIdAndTheaterIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMovieScheduleByMovieIdAndTheaterIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMovieScheduleByMovieIdAndTheaterIdResponse) ProtoMessage() {}

func (x *GetMovieScheduleByMovieIdAndTheaterIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMovieScheduleByMovieIdAndTheaterIdResponse.ProtoReflect.Descriptor instead.
func (*GetMovieScheduleByMovieIdAndTheaterIdResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{12}
}

func (x *GetMovieScheduleByMovieIdAndTheaterIdResponse) GetMovieSchedules() []*MovieSchedule {
	if x != nil {
		return x.MovieSchedules
	}
	return nil
}

func (x *GetMovieScheduleByMovieIdAndTheaterIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetMovieScheduleByMovieIdAndShowTimeIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieId    int32 `protobuf:"varint,1,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
	ShowtimeId int32 `protobuf:"varint,2,opt,name=showtime_id,json=showtimeId,proto3" json:"showtime_id,omitempty"`
}

func (x *GetMovieScheduleByMovieIdAndShowTimeIdRequest) Reset() {
	*x = GetMovieScheduleByMovieIdAndShowTimeIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMovieScheduleByMovieIdAndShowTimeIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMovieScheduleByMovieIdAndShowTimeIdRequest) ProtoMessage() {}

func (x *GetMovieScheduleByMovieIdAndShowTimeIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMovieScheduleByMovieIdAndShowTimeIdRequest.ProtoReflect.Descriptor instead.
func (*GetMovieScheduleByMovieIdAndShowTimeIdRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{13}
}

func (x *GetMovieScheduleByMovieIdAndShowTimeIdRequest) GetMovieId() int32 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

func (x *GetMovieScheduleByMovieIdAndShowTimeIdRequest) GetShowtimeId() int32 {
	if x != nil {
		return x.ShowtimeId
	}
	return 0
}

type GetMovieScheduleByMovieIdAndShowTimeIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieSchedules []*MovieSchedule `protobuf:"bytes,1,rep,name=movie_schedules,json=movieSchedules,proto3" json:"movie_schedules,omitempty"`
	Message        string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetMovieScheduleByMovieIdAndShowTimeIdResponse) Reset() {
	*x = GetMovieScheduleByMovieIdAndShowTimeIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMovieScheduleByMovieIdAndShowTimeIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMovieScheduleByMovieIdAndShowTimeIdResponse) ProtoMessage() {}

func (x *GetMovieScheduleByMovieIdAndShowTimeIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMovieScheduleByMovieIdAndShowTimeIdResponse.ProtoReflect.Descriptor instead.
func (*GetMovieScheduleByMovieIdAndShowTimeIdResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{14}
}

func (x *GetMovieScheduleByMovieIdAndShowTimeIdResponse) GetMovieSchedules() []*MovieSchedule {
	if x != nil {
		return x.MovieSchedules
	}
	return nil
}

func (x *GetMovieScheduleByMovieIdAndShowTimeIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetGetMovieScheduleByTheaterIdAndShowTimeIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheaterId  int32 `protobuf:"varint,1,opt,name=theater_id,json=theaterId,proto3" json:"theater_id,omitempty"`
	ShowtimeId int32 `protobuf:"varint,2,opt,name=showtime_id,json=showtimeId,proto3" json:"showtime_id,omitempty"`
}

func (x *GetGetMovieScheduleByTheaterIdAndShowTimeIdRequest) Reset() {
	*x = GetGetMovieScheduleByTheaterIdAndShowTimeIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGetMovieScheduleByTheaterIdAndShowTimeIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGetMovieScheduleByTheaterIdAndShowTimeIdRequest) ProtoMessage() {}

func (x *GetGetMovieScheduleByTheaterIdAndShowTimeIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGetMovieScheduleByTheaterIdAndShowTimeIdRequest.ProtoReflect.Descriptor instead.
func (*GetGetMovieScheduleByTheaterIdAndShowTimeIdRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{15}
}

func (x *GetGetMovieScheduleByTheaterIdAndShowTimeIdRequest) GetTheaterId() int32 {
	if x != nil {
		return x.TheaterId
	}
	return 0
}

func (x *GetGetMovieScheduleByTheaterIdAndShowTimeIdRequest) GetShowtimeId() int32 {
	if x != nil {
		return x.ShowtimeId
	}
	return 0
}

type GetGetMovieScheduleByTheaterIdAndShowTimeIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieSchedules []*MovieSchedule `protobuf:"bytes,1,rep,name=movie_schedules,json=movieSchedules,proto3" json:"movie_schedules,omitempty"`
	Message        string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetGetMovieScheduleByTheaterIdAndShowTimeIdResponse) Reset() {
	*x = GetGetMovieScheduleByTheaterIdAndShowTimeIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGetMovieScheduleByTheaterIdAndShowTimeIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGetMovieScheduleByTheaterIdAndShowTimeIdResponse) ProtoMessage() {}

func (x *GetGetMovieScheduleByTheaterIdAndShowTimeIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGetMovieScheduleByTheaterIdAndShowTimeIdResponse.ProtoReflect.Descriptor instead.
func (*GetGetMovieScheduleByTheaterIdAndShowTimeIdResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{16}
}

func (x *GetGetMovieScheduleByTheaterIdAndShowTimeIdResponse) GetMovieSchedules() []*MovieSchedule {
	if x != nil {
		return x.MovieSchedules
	}
	return nil
}

func (x *GetGetMovieScheduleByTheaterIdAndShowTimeIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetMovieScheduleByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetMovieScheduleByIDRequest) Reset() {
	*x = GetMovieScheduleByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMovieScheduleByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMovieScheduleByIDRequest) ProtoMessage() {}

func (x *GetMovieScheduleByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMovieScheduleByIDRequest.ProtoReflect.Descriptor instead.
func (*GetMovieScheduleByIDRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{17}
}

func (x *GetMovieScheduleByIDRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetMovieScheduleByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieSchedule *MovieSchedule `protobuf:"bytes,1,opt,name=movie_schedule,json=movieSchedule,proto3" json:"movie_schedule,omitempty"`
	Message       string         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetMovieScheduleByIDResponse) Reset() {
	*x = GetMovieScheduleByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMovieScheduleByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMovieScheduleByIDResponse) ProtoMessage() {}

func (x *GetMovieScheduleByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMovieScheduleByIDResponse.ProtoReflect.Descriptor instead.
func (*GetMovieScheduleByIDResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{18}
}

func (x *GetMovieScheduleByIDResponse) GetMovieSchedule() *MovieSchedule {
	if x != nil {
		return x.MovieSchedule
	}
	return nil
}

func (x *GetMovieScheduleByIDResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteMovieScheduleByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteMovieScheduleByIdRequest) Reset() {
	*x = DeleteMovieScheduleByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMovieScheduleByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMovieScheduleByIdRequest) ProtoMessage() {}

func (x *DeleteMovieScheduleByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMovieScheduleByIdRequest.ProtoReflect.Descriptor instead.
func (*DeleteMovieScheduleByIdRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteMovieScheduleByIdRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteMovieScheduleByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteMovieScheduleByIdResponse) Reset() {
	*x = DeleteMovieScheduleByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMovieScheduleByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMovieScheduleByIdResponse) ProtoMessage() {}

func (x *DeleteMovieScheduleByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMovieScheduleByIdResponse.ProtoReflect.Descriptor instead.
func (*DeleteMovieScheduleByIdResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteMovieScheduleByIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteMovieScheduleByMovieIdAndTheaterIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieId   int32 `protobuf:"varint,1,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
	TheaterId int32 `protobuf:"varint,2,opt,name=theater_id,json=theaterId,proto3" json:"theater_id,omitempty"`
}

func (x *DeleteMovieScheduleByMovieIdAndTheaterIdRequest) Reset() {
	*x = DeleteMovieScheduleByMovieIdAndTheaterIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMovieScheduleByMovieIdAndTheaterIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMovieScheduleByMovieIdAndTheaterIdRequest) ProtoMessage() {}

func (x *DeleteMovieScheduleByMovieIdAndTheaterIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMovieScheduleByMovieIdAndTheaterIdRequest.ProtoReflect.Descriptor instead.
func (*DeleteMovieScheduleByMovieIdAndTheaterIdRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteMovieScheduleByMovieIdAndTheaterIdRequest) GetMovieId() int32 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

func (x *DeleteMovieScheduleByMovieIdAndTheaterIdRequest) GetTheaterId() int32 {
	if x != nil {
		return x.TheaterId
	}
	return 0
}

type DeleteMovieScheduleByMovieIdAndTheaterIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteMovieScheduleByMovieIdAndTheaterIdResponse) Reset() {
	*x = DeleteMovieScheduleByMovieIdAndTheaterIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMovieScheduleByMovieIdAndTheaterIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMovieScheduleByMovieIdAndTheaterIdResponse) ProtoMessage() {}

func (x *DeleteMovieScheduleByMovieIdAndTheaterIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMovieScheduleByMovieIdAndTheaterIdResponse.ProtoReflect.Descriptor instead.
func (*DeleteMovieScheduleByMovieIdAndTheaterIdResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteMovieScheduleByMovieIdAndTheaterIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteMovieScheduleByMovieIdAndTheaterIdAndShowTimeIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieId    int32 `protobuf:"varint,1,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
	TheaterId  int32 `protobuf:"varint,2,opt,name=theater_id,json=theaterId,proto3" json:"theater_id,omitempty"`
	ShowtimeId int32 `protobuf:"varint,3,opt,name=showtime_id,json=showtimeId,proto3" json:"showtime_id,omitempty"`
}

func (x *DeleteMovieScheduleByMovieIdAndTheaterIdAndShowTimeIdRequest) Reset() {
	*x = DeleteMovieScheduleByMovieIdAndTheaterIdAndShowTimeIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMovieScheduleByMovieIdAndTheaterIdAndShowTimeIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMovieScheduleByMovieIdAndTheaterIdAndShowTimeIdRequest) ProtoMessage() {}

func (x *DeleteMovieScheduleByMovieIdAndTheaterIdAndShowTimeIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMovieScheduleByMovieIdAndTheaterIdAndShowTimeIdRequest.ProtoReflect.Descriptor instead.
func (*DeleteMovieScheduleByMovieIdAndTheaterIdAndShowTimeIdRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteMovieScheduleByMovieIdAndTheaterIdAndShowTimeIdRequest) GetMovieId() int32 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

func (x *DeleteMovieScheduleByMovieIdAndTheaterIdAndShowTimeIdRequest) GetTheaterId() int32 {
	if x != nil {
		return x.TheaterId
	}
	return 0
}

func (x *DeleteMovieScheduleByMovieIdAndTheaterIdAndShowTimeIdRequest) GetShowtimeId() int32 {
	if x != nil {
		return x.ShowtimeId
	}
	return 0
}

type DeleteMovieScheduleByMovieIdAndTheaterIdAndShowTimeIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteMovieScheduleByMovieIdAndTheaterIdAndShowTimeIdResponse) Reset() {
	*x = DeleteMovieScheduleByMovieIdAndTheaterIdAndShowTimeIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMovieScheduleByMovieIdAndTheaterIdAndShowTimeIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMovieScheduleByMovieIdAndTheaterIdAndShowTimeIdResponse) ProtoMessage() {}

func (x *DeleteMovieScheduleByMovieIdAndTheaterIdAndShowTimeIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMovieScheduleByMovieIdAndTheaterIdAndShowTimeIdResponse.ProtoReflect.Descriptor instead.
func (*DeleteMovieScheduleByMovieIdAndTheaterIdAndShowTimeIdResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteMovieScheduleByMovieIdAndTheaterIdAndShowTimeIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Movie related messages
type RegisterMovieRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string  `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Duration    int32   `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	Genre       string  `protobuf:"bytes,4,opt,name=genre,proto3" json:"genre,omitempty"`
	ReleaseDate string  `protobuf:"bytes,5,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	Rating      float32 `protobuf:"fixed32,6,opt,name=rating,proto3" json:"rating,omitempty"`
	Language    string  `protobuf:"bytes,7,opt,name=Language,proto3" json:"Language,omitempty"`
}

func (x *RegisterMovieRequest) Reset() {
	*x = RegisterMovieRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterMovieRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterMovieRequest) ProtoMessage() {}

func (x *RegisterMovieRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterMovieRequest.ProtoReflect.Descriptor instead.
func (*RegisterMovieRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{25}
}

func (x *RegisterMovieRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RegisterMovieRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RegisterMovieRequest) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *RegisterMovieRequest) GetGenre() string {
	if x != nil {
		return x.Genre
	}
	return ""
}

func (x *RegisterMovieRequest) GetReleaseDate() string {
	if x != nil {
		return x.ReleaseDate
	}
	return ""
}

func (x *RegisterMovieRequest) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *RegisterMovieRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type RegisterMovieResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieId uint32 `protobuf:"varint,1,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RegisterMovieResponse) Reset() {
	*x = RegisterMovieResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterMovieResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterMovieResponse) ProtoMessage() {}

func (x *RegisterMovieResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterMovieResponse.ProtoReflect.Descriptor instead.
func (*RegisterMovieResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{26}
}

func (x *RegisterMovieResponse) GetMovieId() uint32 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

func (x *RegisterMovieResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UpdateMovieRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieId     uint32  `protobuf:"varint,1,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
	Title       string  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Duration    int32   `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	Genre       string  `protobuf:"bytes,5,opt,name=genre,proto3" json:"genre,omitempty"`
	ReleaseDate string  `protobuf:"bytes,6,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	Rating      float32 `protobuf:"fixed32,7,opt,name=rating,proto3" json:"rating,omitempty"`
	Language    string  `protobuf:"bytes,8,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *UpdateMovieRequest) Reset() {
	*x = UpdateMovieRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMovieRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMovieRequest) ProtoMessage() {}

func (x *UpdateMovieRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMovieRequest.ProtoReflect.Descriptor instead.
func (*UpdateMovieRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateMovieRequest) GetMovieId() uint32 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

func (x *UpdateMovieRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateMovieRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateMovieRequest) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *UpdateMovieRequest) GetGenre() string {
	if x != nil {
		return x.Genre
	}
	return ""
}

func (x *UpdateMovieRequest) GetReleaseDate() string {
	if x != nil {
		return x.ReleaseDate
	}
	return ""
}

func (x *UpdateMovieRequest) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *UpdateMovieRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type UpdateMovieResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateMovieResponse) Reset() {
	*x = UpdateMovieResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMovieResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMovieResponse) ProtoMessage() {}

func (x *UpdateMovieResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMovieResponse.ProtoReflect.Descriptor instead.
func (*UpdateMovieResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateMovieResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListMoviesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *ListMoviesRequest) Reset() {
	*x = ListMoviesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMoviesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMoviesRequest) ProtoMessage() {}

func (x *ListMoviesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMoviesRequest.ProtoReflect.Descriptor instead.
func (*ListMoviesRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{29}
}

func (x *ListMoviesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListMoviesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type Movie struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieId     uint32  `protobuf:"varint,1,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
	Title       string  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Duration    int32   `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	Genre       string  `protobuf:"bytes,5,opt,name=genre,proto3" json:"genre,omitempty"`
	ReleaseDate string  `protobuf:"bytes,6,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	Rating      float32 `protobuf:"fixed32,7,opt,name=rating,proto3" json:"rating,omitempty"`
	Language    string  `protobuf:"bytes,8,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *Movie) Reset() {
	*x = Movie{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Movie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Movie) ProtoMessage() {}

func (x *Movie) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Movie.ProtoReflect.Descriptor instead.
func (*Movie) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{30}
}

func (x *Movie) GetMovieId() uint32 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

func (x *Movie) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Movie) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Movie) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Movie) GetGenre() string {
	if x != nil {
		return x.Genre
	}
	return ""
}

func (x *Movie) GetReleaseDate() string {
	if x != nil {
		return x.ReleaseDate
	}
	return ""
}

func (x *Movie) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *Movie) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type ListMoviesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Movies []*Movie `protobuf:"bytes,1,rep,name=movies,proto3" json:"movies,omitempty"`
}

func (x *ListMoviesResponse) Reset() {
	*x = ListMoviesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMoviesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMoviesResponse) ProtoMessage() {}

func (x *ListMoviesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMoviesResponse.ProtoReflect.Descriptor instead.
func (*ListMoviesResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{31}
}

func (x *ListMoviesResponse) GetMovies() []*Movie {
	if x != nil {
		return x.Movies
	}
	return nil
}

type GetMovieDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieId uint32 `protobuf:"varint,1,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
}

func (x *GetMovieDetailsRequest) Reset() {
	*x = GetMovieDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMovieDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMovieDetailsRequest) ProtoMessage() {}

func (x *GetMovieDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMovieDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetMovieDetailsRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{32}
}

func (x *GetMovieDetailsRequest) GetMovieId() uint32 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

type GetMovieDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Movie *Movie `protobuf:"bytes,1,opt,name=movie,proto3" json:"movie,omitempty"`
}

func (x *GetMovieDetailsResponse) Reset() {
	*x = GetMovieDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMovieDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMovieDetailsResponse) ProtoMessage() {}

func (x *GetMovieDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMovieDetailsResponse.ProtoReflect.Descriptor instead.
func (*GetMovieDetailsResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{33}
}

func (x *GetMovieDetailsResponse) GetMovie() *Movie {
	if x != nil {
		return x.Movie
	}
	return nil
}

type DeleteMovieRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieId uint32 `protobuf:"varint,1,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
}

func (x *DeleteMovieRequest) Reset() {
	*x = DeleteMovieRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMovieRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMovieRequest) ProtoMessage() {}

func (x *DeleteMovieRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMovieRequest.ProtoReflect.Descriptor instead.
func (*DeleteMovieRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{34}
}

func (x *DeleteMovieRequest) GetMovieId() uint32 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

type DeleteMovieResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteMovieResponse) Reset() {
	*x = DeleteMovieResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMovieResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMovieResponse) ProtoMessage() {}

func (x *DeleteMovieResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMovieResponse.ProtoReflect.Descriptor instead.
func (*DeleteMovieResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{35}
}

func (x *DeleteMovieResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Theatres related messages
type Theater struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheaterId       int32  `protobuf:"varint,1,opt,name=theater_id,json=theaterId,proto3" json:"theater_id,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Place           string `protobuf:"bytes,3,opt,name=place,proto3" json:"place,omitempty"`
	City            string `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty"`
	District        string `protobuf:"bytes,5,opt,name=district,proto3" json:"district,omitempty"`
	State           string `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
	OwnerId         uint32 `protobuf:"varint,7,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	NumberOfScreens int32  `protobuf:"varint,8,opt,name=number_of_screens,json=numberOfScreens,proto3" json:"number_of_screens,omitempty"`
	TheaterTypeId   int32  `protobuf:"varint,9,opt,name=theater_type_id,json=theaterTypeId,proto3" json:"theater_type_id,omitempty"`
}

func (x *Theater) Reset() {
	*x = Theater{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Theater) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Theater) ProtoMessage() {}

func (x *Theater) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Theater.ProtoReflect.Descriptor instead.
func (*Theater) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{36}
}

func (x *Theater) GetTheaterId() int32 {
	if x != nil {
		return x.TheaterId
	}
	return 0
}

func (x *Theater) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Theater) GetPlace() string {
	if x != nil {
		return x.Place
	}
	return ""
}

func (x *Theater) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Theater) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *Theater) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Theater) GetOwnerId() uint32 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *Theater) GetNumberOfScreens() int32 {
	if x != nil {
		return x.NumberOfScreens
	}
	return 0
}

func (x *Theater) GetTheaterTypeId() int32 {
	if x != nil {
		return x.TheaterTypeId
	}
	return 0
}

type AddTheaterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Place           string `protobuf:"bytes,2,opt,name=place,proto3" json:"place,omitempty"`
	City            string `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	District        string `protobuf:"bytes,4,opt,name=district,proto3" json:"district,omitempty"`
	State           string `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	OwnerId         uint32 `protobuf:"varint,6,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	NumberOfScreens int32  `protobuf:"varint,7,opt,name=number_of_screens,json=numberOfScreens,proto3" json:"number_of_screens,omitempty"`
	TheaterTypeId   int32  `protobuf:"varint,8,opt,name=theater_type_id,json=theaterTypeId,proto3" json:"theater_type_id,omitempty"`
}

func (x *AddTheaterRequest) Reset() {
	*x = AddTheaterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTheaterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTheaterRequest) ProtoMessage() {}

func (x *AddTheaterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTheaterRequest.ProtoReflect.Descriptor instead.
func (*AddTheaterRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{37}
}

func (x *AddTheaterRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddTheaterRequest) GetPlace() string {
	if x != nil {
		return x.Place
	}
	return ""
}

func (x *AddTheaterRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *AddTheaterRequest) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *AddTheaterRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *AddTheaterRequest) GetOwnerId() uint32 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *AddTheaterRequest) GetNumberOfScreens() int32 {
	if x != nil {
		return x.NumberOfScreens
	}
	return 0
}

func (x *AddTheaterRequest) GetTheaterTypeId() int32 {
	if x != nil {
		return x.TheaterTypeId
	}
	return 0
}

type AddTheaterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddTheaterResponse) Reset() {
	*x = AddTheaterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTheaterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTheaterResponse) ProtoMessage() {}

func (x *AddTheaterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTheaterResponse.ProtoReflect.Descriptor instead.
func (*AddTheaterResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{38}
}

type DeleteTheaterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheaterId int32 `protobuf:"varint,1,opt,name=theater_id,json=theaterId,proto3" json:"theater_id,omitempty"`
}

func (x *DeleteTheaterRequest) Reset() {
	*x = DeleteTheaterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTheaterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTheaterRequest) ProtoMessage() {}

func (x *DeleteTheaterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTheaterRequest.ProtoReflect.Descriptor instead.
func (*DeleteTheaterRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{39}
}

func (x *DeleteTheaterRequest) GetTheaterId() int32 {
	if x != nil {
		return x.TheaterId
	}
	return 0
}

type DeleteTheaterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteTheaterResponse) Reset() {
	*x = DeleteTheaterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTheaterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTheaterResponse) ProtoMessage() {}

func (x *DeleteTheaterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTheaterResponse.ProtoReflect.Descriptor instead.
func (*DeleteTheaterResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{40}
}

type DeleteTheaterByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteTheaterByNameRequest) Reset() {
	*x = DeleteTheaterByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTheaterByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTheaterByNameRequest) ProtoMessage() {}

func (x *DeleteTheaterByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTheaterByNameRequest.ProtoReflect.Descriptor instead.
func (*DeleteTheaterByNameRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{41}
}

func (x *DeleteTheaterByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteTheaterByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteTheaterByNameResponse) Reset() {
	*x = DeleteTheaterByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTheaterByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTheaterByNameResponse) ProtoMessage() {}

func (x *DeleteTheaterByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTheaterByNameResponse.ProtoReflect.Descriptor instead.
func (*DeleteTheaterByNameResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{42}
}

type GetTheaterByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheaterId int32 `protobuf:"varint,1,opt,name=theater_id,json=theaterId,proto3" json:"theater_id,omitempty"`
}

func (x *GetTheaterByIDRequest) Reset() {
	*x = GetTheaterByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTheaterByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTheaterByIDRequest) ProtoMessage() {}

func (x *GetTheaterByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTheaterByIDRequest.ProtoReflect.Descriptor instead.
func (*GetTheaterByIDRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{43}
}

func (x *GetTheaterByIDRequest) GetTheaterId() int32 {
	if x != nil {
		return x.TheaterId
	}
	return 0
}

type GetTheaterByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Theater *Theater `protobuf:"bytes,1,opt,name=theater,proto3" json:"theater,omitempty"`
}

func (x *GetTheaterByIDResponse) Reset() {
	*x = GetTheaterByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTheaterByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTheaterByIDResponse) ProtoMessage() {}

func (x *GetTheaterByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTheaterByIDResponse.ProtoReflect.Descriptor instead.
func (*GetTheaterByIDResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{44}
}

func (x *GetTheaterByIDResponse) GetTheater() *Theater {
	if x != nil {
		return x.Theater
	}
	return nil
}

type GetTheaterByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetTheaterByNameRequest) Reset() {
	*x = GetTheaterByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTheaterByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTheaterByNameRequest) ProtoMessage() {}

func (x *GetTheaterByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTheaterByNameRequest.ProtoReflect.Descriptor instead.
func (*GetTheaterByNameRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{45}
}

func (x *GetTheaterByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetTheaterByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Theater []*Theater `protobuf:"bytes,1,rep,name=theater,proto3" json:"theater,omitempty"`
}

func (x *GetTheaterByNameResponse) Reset() {
	*x = GetTheaterByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTheaterByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTheaterByNameResponse) ProtoMessage() {}

func (x *GetTheaterByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTheaterByNameResponse.ProtoReflect.Descriptor instead.
func (*GetTheaterByNameResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{46}
}

func (x *GetTheaterByNameResponse) GetTheater() []*Theater {
	if x != nil {
		return x.Theater
	}
	return nil
}

type UpdateTheaterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheaterId       int32  `protobuf:"varint,1,opt,name=theater_id,json=theaterId,proto3" json:"theater_id,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Place           string `protobuf:"bytes,3,opt,name=place,proto3" json:"place,omitempty"`
	City            string `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty"`
	District        string `protobuf:"bytes,5,opt,name=district,proto3" json:"district,omitempty"`
	State           string `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
	OwnerId         uint32 `protobuf:"varint,7,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	NumberOfScreens int32  `protobuf:"varint,8,opt,name=number_of_screens,json=numberOfScreens,proto3" json:"number_of_screens,omitempty"`
	TheaterTypeId   int32  `protobuf:"varint,9,opt,name=theater_type_id,json=theaterTypeId,proto3" json:"theater_type_id,omitempty"`
}

func (x *UpdateTheaterRequest) Reset() {
	*x = UpdateTheaterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTheaterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTheaterRequest) ProtoMessage() {}

func (x *UpdateTheaterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTheaterRequest.ProtoReflect.Descriptor instead.
func (*UpdateTheaterRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{47}
}

func (x *UpdateTheaterRequest) GetTheaterId() int32 {
	if x != nil {
		return x.TheaterId
	}
	return 0
}

func (x *UpdateTheaterRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateTheaterRequest) GetPlace() string {
	if x != nil {
		return x.Place
	}
	return ""
}

func (x *UpdateTheaterRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UpdateTheaterRequest) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *UpdateTheaterRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *UpdateTheaterRequest) GetOwnerId() uint32 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *UpdateTheaterRequest) GetNumberOfScreens() int32 {
	if x != nil {
		return x.NumberOfScreens
	}
	return 0
}

func (x *UpdateTheaterRequest) GetTheaterTypeId() int32 {
	if x != nil {
		return x.TheaterTypeId
	}
	return 0
}

type UpdateTheaterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTheaterResponse) Reset() {
	*x = UpdateTheaterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTheaterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTheaterResponse) ProtoMessage() {}

func (x *UpdateTheaterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTheaterResponse.ProtoReflect.Descriptor instead.
func (*UpdateTheaterResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{48}
}

type ListTheatersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListTheatersRequest) Reset() {
	*x = ListTheatersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTheatersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTheatersRequest) ProtoMessage() {}

func (x *ListTheatersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTheatersRequest.ProtoReflect.Descriptor instead.
func (*ListTheatersRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{49}
}

type ListTheatersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Theaters []*Theater `protobuf:"bytes,1,rep,name=theaters,proto3" json:"theaters,omitempty"`
}

func (x *ListTheatersResponse) Reset() {
	*x = ListTheatersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTheatersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTheatersResponse) ProtoMessage() {}

func (x *ListTheatersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTheatersResponse.ProtoReflect.Descriptor instead.
func (*ListTheatersResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{50}
}

func (x *ListTheatersResponse) GetTheaters() []*Theater {
	if x != nil {
		return x.Theaters
	}
	return nil
}

type GetTheatersByAdminIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminId int32 `protobuf:"varint,1,opt,name=admin_id,json=adminId,proto3" json:"admin_id,omitempty"`
}

func (x *GetTheatersByAdminIdRequest) Reset() {
	*x = GetTheatersByAdminIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTheatersByAdminIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTheatersByAdminIdRequest) ProtoMessage() {}

func (x *GetTheatersByAdminIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTheatersByAdminIdRequest.ProtoReflect.Descriptor instead.
func (*GetTheatersByAdminIdRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{51}
}

func (x *GetTheatersByAdminIdRequest) GetAdminId() int32 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

type GetTheatersByAdminIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Theaters []*Theater `protobuf:"bytes,1,rep,name=theaters,proto3" json:"theaters,omitempty"`
}

func (x *GetTheatersByAdminIdResponse) Reset() {
	*x = GetTheatersByAdminIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTheatersByAdminIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTheatersByAdminIdResponse) ProtoMessage() {}

func (x *GetTheatersByAdminIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTheatersByAdminIdResponse.ProtoReflect.Descriptor instead.
func (*GetTheatersByAdminIdResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{52}
}

func (x *GetTheatersByAdminIdResponse) GetTheaters() []*Theater {
	if x != nil {
		return x.Theaters
	}
	return nil
}

// Theater types replated messages
type AddTheaterTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheaterTypeName string `protobuf:"bytes,1,opt,name=theater_type_name,json=theaterTypeName,proto3" json:"theater_type_name,omitempty"`
}

func (x *AddTheaterTypeRequest) Reset() {
	*x = AddTheaterTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTheaterTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTheaterTypeRequest) ProtoMessage() {}

func (x *AddTheaterTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTheaterTypeRequest.ProtoReflect.Descriptor instead.
func (*AddTheaterTypeRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{53}
}

func (x *AddTheaterTypeRequest) GetTheaterTypeName() string {
	if x != nil {
		return x.TheaterTypeName
	}
	return ""
}

type AddTheaterTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddTheaterTypeResponse) Reset() {
	*x = AddTheaterTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTheaterTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTheaterTypeResponse) ProtoMessage() {}

func (x *AddTheaterTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTheaterTypeResponse.ProtoReflect.Descriptor instead.
func (*AddTheaterTypeResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{54}
}

func (x *AddTheaterTypeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteTheaterTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheaterTypeId int32 `protobuf:"varint,1,opt,name=theater_type_id,json=theaterTypeId,proto3" json:"theater_type_id,omitempty"`
}

func (x *DeleteTheaterTypeRequest) Reset() {
	*x = DeleteTheaterTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTheaterTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTheaterTypeRequest) ProtoMessage() {}

func (x *DeleteTheaterTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTheaterTypeRequest.ProtoReflect.Descriptor instead.
func (*DeleteTheaterTypeRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{55}
}

func (x *DeleteTheaterTypeRequest) GetTheaterTypeId() int32 {
	if x != nil {
		return x.TheaterTypeId
	}
	return 0
}

type DeleteTheaterTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteTheaterTypeResponse) Reset() {
	*x = DeleteTheaterTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTheaterTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTheaterTypeResponse) ProtoMessage() {}

func (x *DeleteTheaterTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTheaterTypeResponse.ProtoReflect.Descriptor instead.
func (*DeleteTheaterTypeResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{56}
}

func (x *DeleteTheaterTypeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteTheaterTypeByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteTheaterTypeByNameRequest) Reset() {
	*x = DeleteTheaterTypeByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTheaterTypeByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTheaterTypeByNameRequest) ProtoMessage() {}

func (x *DeleteTheaterTypeByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTheaterTypeByNameRequest.ProtoReflect.Descriptor instead.
func (*DeleteTheaterTypeByNameRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{57}
}

func (x *DeleteTheaterTypeByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteTheaterTypeByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteTheaterTypeByNameResponse) Reset() {
	*x = DeleteTheaterTypeByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTheaterTypeByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTheaterTypeByNameResponse) ProtoMessage() {}

func (x *DeleteTheaterTypeByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTheaterTypeByNameResponse.ProtoReflect.Descriptor instead.
func (*DeleteTheaterTypeByNameResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{58}
}

func (x *DeleteTheaterTypeByNameResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetTheaterTypeByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheaterTypeId int32 `protobuf:"varint,1,opt,name=theater_type_id,json=theaterTypeId,proto3" json:"theater_type_id,omitempty"`
}

func (x *GetTheaterTypeByIDRequest) Reset() {
	*x = GetTheaterTypeByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTheaterTypeByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTheaterTypeByIDRequest) ProtoMessage() {}

func (x *GetTheaterTypeByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTheaterTypeByIDRequest.ProtoReflect.Descriptor instead.
func (*GetTheaterTypeByIDRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{59}
}

func (x *GetTheaterTypeByIDRequest) GetTheaterTypeId() int32 {
	if x != nil {
		return x.TheaterTypeId
	}
	return 0
}

type GetTheaterTypeByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheaterType *TheaterType `protobuf:"bytes,1,opt,name=theater_type,json=theaterType,proto3" json:"theater_type,omitempty"`
}

func (x *GetTheaterTypeByIDResponse) Reset() {
	*x = GetTheaterTypeByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTheaterTypeByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTheaterTypeByIDResponse) ProtoMessage() {}

func (x *GetTheaterTypeByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTheaterTypeByIDResponse.ProtoReflect.Descriptor instead.
func (*GetTheaterTypeByIDResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{60}
}

func (x *GetTheaterTypeByIDResponse) GetTheaterType() *TheaterType {
	if x != nil {
		return x.TheaterType
	}
	return nil
}

type TheaterType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TheaterTypeName string `protobuf:"bytes,2,opt,name=theater_type_name,json=theaterTypeName,proto3" json:"theater_type_name,omitempty"`
}

func (x *TheaterType) Reset() {
	*x = TheaterType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TheaterType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TheaterType) ProtoMessage() {}

func (x *TheaterType) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TheaterType.ProtoReflect.Descriptor instead.
func (*TheaterType) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{61}
}

func (x *TheaterType) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TheaterType) GetTheaterTypeName() string {
	if x != nil {
		return x.TheaterTypeName
	}
	return ""
}

type GetTheaterTypeByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetTheaterTypeByNameRequest) Reset() {
	*x = GetTheaterTypeByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTheaterTypeByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTheaterTypeByNameRequest) ProtoMessage() {}

func (x *GetTheaterTypeByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTheaterTypeByNameRequest.ProtoReflect.Descriptor instead.
func (*GetTheaterTypeByNameRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{62}
}

func (x *GetTheaterTypeByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetTheaterTypeBynameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheaterType *TheaterType `protobuf:"bytes,1,opt,name=theater_type,json=theaterType,proto3" json:"theater_type,omitempty"`
}

func (x *GetTheaterTypeBynameResponse) Reset() {
	*x = GetTheaterTypeBynameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTheaterTypeBynameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTheaterTypeBynameResponse) ProtoMessage() {}

func (x *GetTheaterTypeBynameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTheaterTypeBynameResponse.ProtoReflect.Descriptor instead.
func (*GetTheaterTypeBynameResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{63}
}

func (x *GetTheaterTypeBynameResponse) GetTheaterType() *TheaterType {
	if x != nil {
		return x.TheaterType
	}
	return nil
}

type UpdateTheaterTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TheaterTypeName string `protobuf:"bytes,2,opt,name=theater_type_name,json=theaterTypeName,proto3" json:"theater_type_name,omitempty"`
}

func (x *UpdateTheaterTypeRequest) Reset() {
	*x = UpdateTheaterTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTheaterTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTheaterTypeRequest) ProtoMessage() {}

func (x *UpdateTheaterTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTheaterTypeRequest.ProtoReflect.Descriptor instead.
func (*UpdateTheaterTypeRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{64}
}

func (x *UpdateTheaterTypeRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateTheaterTypeRequest) GetTheaterTypeName() string {
	if x != nil {
		return x.TheaterTypeName
	}
	return ""
}

type UpdateTheaterTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateTheaterTypeResponse) Reset() {
	*x = UpdateTheaterTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTheaterTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTheaterTypeResponse) ProtoMessage() {}

func (x *UpdateTheaterTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTheaterTypeResponse.ProtoReflect.Descriptor instead.
func (*UpdateTheaterTypeResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{65}
}

func (x *UpdateTheaterTypeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListTheaterTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListTheaterTypesRequest) Reset() {
	*x = ListTheaterTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTheaterTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTheaterTypesRequest) ProtoMessage() {}

func (x *ListTheaterTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTheaterTypesRequest.ProtoReflect.Descriptor instead.
func (*ListTheaterTypesRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{66}
}

type ListTheaterTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheaterTypes []*TheaterType `protobuf:"bytes,1,rep,name=theater_types,json=theaterTypes,proto3" json:"theater_types,omitempty"`
}

func (x *ListTheaterTypeResponse) Reset() {
	*x = ListTheaterTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTheaterTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTheaterTypeResponse) ProtoMessage() {}

func (x *ListTheaterTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTheaterTypeResponse.ProtoReflect.Descriptor instead.
func (*ListTheaterTypeResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{67}
}

func (x *ListTheaterTypeResponse) GetTheaterTypes() []*TheaterType {
	if x != nil {
		return x.TheaterTypes
	}
	return nil
}

// Screen types related messages
type AddScreenTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScreenTypeName string `protobuf:"bytes,1,opt,name=screen_type_name,json=screenTypeName,proto3" json:"screen_type_name,omitempty"`
}

func (x *AddScreenTypeRequest) Reset() {
	*x = AddScreenTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddScreenTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddScreenTypeRequest) ProtoMessage() {}

func (x *AddScreenTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddScreenTypeRequest.ProtoReflect.Descriptor instead.
func (*AddScreenTypeRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{68}
}

func (x *AddScreenTypeRequest) GetScreenTypeName() string {
	if x != nil {
		return x.ScreenTypeName
	}
	return ""
}

type AddScreenTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddScreenTypeResponse) Reset() {
	*x = AddScreenTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddScreenTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddScreenTypeResponse) ProtoMessage() {}

func (x *AddScreenTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddScreenTypeResponse.ProtoReflect.Descriptor instead.
func (*AddScreenTypeResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{69}
}

func (x *AddScreenTypeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteScreenTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScreenTypeId int32 `protobuf:"varint,1,opt,name=screen_type_id,json=screenTypeId,proto3" json:"screen_type_id,omitempty"`
}

func (x *DeleteScreenTypeRequest) Reset() {
	*x = DeleteScreenTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteScreenTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteScreenTypeRequest) ProtoMessage() {}

func (x *DeleteScreenTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteScreenTypeRequest.ProtoReflect.Descriptor instead.
func (*DeleteScreenTypeRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{70}
}

func (x *DeleteScreenTypeRequest) GetScreenTypeId() int32 {
	if x != nil {
		return x.ScreenTypeId
	}
	return 0
}

type DeleteScreenTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteScreenTypeResponse) Reset() {
	*x = DeleteScreenTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteScreenTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteScreenTypeResponse) ProtoMessage() {}

func (x *DeleteScreenTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteScreenTypeResponse.ProtoReflect.Descriptor instead.
func (*DeleteScreenTypeResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{71}
}

func (x *DeleteScreenTypeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteScreenTypeByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteScreenTypeByNameRequest) Reset() {
	*x = DeleteScreenTypeByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteScreenTypeByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteScreenTypeByNameRequest) ProtoMessage() {}

func (x *DeleteScreenTypeByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteScreenTypeByNameRequest.ProtoReflect.Descriptor instead.
func (*DeleteScreenTypeByNameRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{72}
}

func (x *DeleteScreenTypeByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteScreenTypeByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteScreenTypeByNameResponse) Reset() {
	*x = DeleteScreenTypeByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteScreenTypeByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteScreenTypeByNameResponse) ProtoMessage() {}

func (x *DeleteScreenTypeByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteScreenTypeByNameResponse.ProtoReflect.Descriptor instead.
func (*DeleteScreenTypeByNameResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{73}
}

func (x *DeleteScreenTypeByNameResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetScreenTypeByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScreenTypeId int32 `protobuf:"varint,1,opt,name=screen_type_id,json=screenTypeId,proto3" json:"screen_type_id,omitempty"`
}

func (x *GetScreenTypeByIDRequest) Reset() {
	*x = GetScreenTypeByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScreenTypeByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScreenTypeByIDRequest) ProtoMessage() {}

func (x *GetScreenTypeByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScreenTypeByIDRequest.ProtoReflect.Descriptor instead.
func (*GetScreenTypeByIDRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{74}
}

func (x *GetScreenTypeByIDRequest) GetScreenTypeId() int32 {
	if x != nil {
		return x.ScreenTypeId
	}
	return 0
}

type GetScreenTypeByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScreenType *ScreenType `protobuf:"bytes,1,opt,name=screen_type,json=screenType,proto3" json:"screen_type,omitempty"`
}

func (x *GetScreenTypeByIDResponse) Reset() {
	*x = GetScreenTypeByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScreenTypeByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScreenTypeByIDResponse) ProtoMessage() {}

func (x *GetScreenTypeByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScreenTypeByIDResponse.ProtoReflect.Descriptor instead.
func (*GetScreenTypeByIDResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{75}
}

func (x *GetScreenTypeByIDResponse) GetScreenType() *ScreenType {
	if x != nil {
		return x.ScreenType
	}
	return nil
}

type ScreenType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ScreenTypeName string `protobuf:"bytes,2,opt,name=screen_type_name,json=screenTypeName,proto3" json:"screen_type_name,omitempty"`
}

func (x *ScreenType) Reset() {
	*x = ScreenType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScreenType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScreenType) ProtoMessage() {}

func (x *ScreenType) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScreenType.ProtoReflect.Descriptor instead.
func (*ScreenType) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{76}
}

func (x *ScreenType) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ScreenType) GetScreenTypeName() string {
	if x != nil {
		return x.ScreenTypeName
	}
	return ""
}

type GetScreenTypeByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetScreenTypeByNameRequest) Reset() {
	*x = GetScreenTypeByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScreenTypeByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScreenTypeByNameRequest) ProtoMessage() {}

func (x *GetScreenTypeByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScreenTypeByNameRequest.ProtoReflect.Descriptor instead.
func (*GetScreenTypeByNameRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{77}
}

func (x *GetScreenTypeByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetScreenTypeByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScreenType *ScreenType `protobuf:"bytes,1,opt,name=screen_type,json=screenType,proto3" json:"screen_type,omitempty"`
}

func (x *GetScreenTypeByNameResponse) Reset() {
	*x = GetScreenTypeByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScreenTypeByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScreenTypeByNameResponse) ProtoMessage() {}

func (x *GetScreenTypeByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScreenTypeByNameResponse.ProtoReflect.Descriptor instead.
func (*GetScreenTypeByNameResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{78}
}

func (x *GetScreenTypeByNameResponse) GetScreenType() *ScreenType {
	if x != nil {
		return x.ScreenType
	}
	return nil
}

type UpdateScreenTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ScreenTypeName string `protobuf:"bytes,2,opt,name=screen_type_name,json=screenTypeName,proto3" json:"screen_type_name,omitempty"`
}

func (x *UpdateScreenTypeRequest) Reset() {
	*x = UpdateScreenTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateScreenTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateScreenTypeRequest) ProtoMessage() {}

func (x *UpdateScreenTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateScreenTypeRequest.ProtoReflect.Descriptor instead.
func (*UpdateScreenTypeRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{79}
}

func (x *UpdateScreenTypeRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateScreenTypeRequest) GetScreenTypeName() string {
	if x != nil {
		return x.ScreenTypeName
	}
	return ""
}

type UpdateScreenTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateScreenTypeResponse) Reset() {
	*x = UpdateScreenTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateScreenTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateScreenTypeResponse) ProtoMessage() {}

func (x *UpdateScreenTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateScreenTypeResponse.ProtoReflect.Descriptor instead.
func (*UpdateScreenTypeResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{80}
}

func (x *UpdateScreenTypeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListScreenTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListScreenTypesRequest) Reset() {
	*x = ListScreenTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListScreenTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScreenTypesRequest) ProtoMessage() {}

func (x *ListScreenTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListScreenTypesRequest.ProtoReflect.Descriptor instead.
func (*ListScreenTypesRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{81}
}

type ListScreenTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScreenTypes []*ScreenType `protobuf:"bytes,1,rep,name=screen_types,json=screenTypes,proto3" json:"screen_types,omitempty"`
}

func (x *ListScreenTypesResponse) Reset() {
	*x = ListScreenTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListScreenTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScreenTypesResponse) ProtoMessage() {}

func (x *ListScreenTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListScreenTypesResponse.ProtoReflect.Descriptor instead.
func (*ListScreenTypesResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{82}
}

func (x *ListScreenTypesResponse) GetScreenTypes() []*ScreenType {
	if x != nil {
		return x.ScreenTypes
	}
	return nil
}

// seat category related messages
type SeatCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SeatCategoryName string `protobuf:"bytes,2,opt,name=seat_category_name,json=seatCategoryName,proto3" json:"seat_category_name,omitempty"`
}

func (x *SeatCategory) Reset() {
	*x = SeatCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeatCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeatCategory) ProtoMessage() {}

func (x *SeatCategory) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeatCategory.ProtoReflect.Descriptor instead.
func (*SeatCategory) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{83}
}

func (x *SeatCategory) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SeatCategory) GetSeatCategoryName() string {
	if x != nil {
		return x.SeatCategoryName
	}
	return ""
}

type AddSeatCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatCategory *SeatCategory `protobuf:"bytes,1,opt,name=seat_category,json=seatCategory,proto3" json:"seat_category,omitempty"`
}

func (x *AddSeatCategoryRequest) Reset() {
	*x = AddSeatCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSeatCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSeatCategoryRequest) ProtoMessage() {}

func (x *AddSeatCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSeatCategoryRequest.ProtoReflect.Descriptor instead.
func (*AddSeatCategoryRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{84}
}

func (x *AddSeatCategoryRequest) GetSeatCategory() *SeatCategory {
	if x != nil {
		return x.SeatCategory
	}
	return nil
}

type AddSeatCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddSeatCategoryResponse) Reset() {
	*x = AddSeatCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSeatCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSeatCategoryResponse) ProtoMessage() {}

func (x *AddSeatCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSeatCategoryResponse.ProtoReflect.Descriptor instead.
func (*AddSeatCategoryResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{85}
}

func (x *AddSeatCategoryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteSeatCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatCategoryId int32 `protobuf:"varint,1,opt,name=seat_category_id,json=seatCategoryId,proto3" json:"seat_category_id,omitempty"`
}

func (x *DeleteSeatCategoryRequest) Reset() {
	*x = DeleteSeatCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSeatCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSeatCategoryRequest) ProtoMessage() {}

func (x *DeleteSeatCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSeatCategoryRequest.ProtoReflect.Descriptor instead.
func (*DeleteSeatCategoryRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{86}
}

func (x *DeleteSeatCategoryRequest) GetSeatCategoryId() int32 {
	if x != nil {
		return x.SeatCategoryId
	}
	return 0
}

type DeleteSeatCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteSeatCategoryResponse) Reset() {
	*x = DeleteSeatCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSeatCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSeatCategoryResponse) ProtoMessage() {}

func (x *DeleteSeatCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSeatCategoryResponse.ProtoReflect.Descriptor instead.
func (*DeleteSeatCategoryResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{87}
}

func (x *DeleteSeatCategoryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteSeatCategoryByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteSeatCategoryByNameRequest) Reset() {
	*x = DeleteSeatCategoryByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSeatCategoryByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSeatCategoryByNameRequest) ProtoMessage() {}

func (x *DeleteSeatCategoryByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSeatCategoryByNameRequest.ProtoReflect.Descriptor instead.
func (*DeleteSeatCategoryByNameRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{88}
}

func (x *DeleteSeatCategoryByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteSeatCategoryByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteSeatCategoryByNameResponse) Reset() {
	*x = DeleteSeatCategoryByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSeatCategoryByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSeatCategoryByNameResponse) ProtoMessage() {}

func (x *DeleteSeatCategoryByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSeatCategoryByNameResponse.ProtoReflect.Descriptor instead.
func (*DeleteSeatCategoryByNameResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{89}
}

func (x *DeleteSeatCategoryByNameResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetSeatCategoryByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatCategoryId int32 `protobuf:"varint,1,opt,name=seat_category_id,json=seatCategoryId,proto3" json:"seat_category_id,omitempty"`
}

func (x *GetSeatCategoryByIDRequest) Reset() {
	*x = GetSeatCategoryByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSeatCategoryByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeatCategoryByIDRequest) ProtoMessage() {}

func (x *GetSeatCategoryByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeatCategoryByIDRequest.ProtoReflect.Descriptor instead.
func (*GetSeatCategoryByIDRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{90}
}

func (x *GetSeatCategoryByIDRequest) GetSeatCategoryId() int32 {
	if x != nil {
		return x.SeatCategoryId
	}
	return 0
}

type GetSeatCategoryByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatCategory *SeatCategory `protobuf:"bytes,1,opt,name=seat_category,json=seatCategory,proto3" json:"seat_category,omitempty"`
}

func (x *GetSeatCategoryByIDResponse) Reset() {
	*x = GetSeatCategoryByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSeatCategoryByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeatCategoryByIDResponse) ProtoMessage() {}

func (x *GetSeatCategoryByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeatCategoryByIDResponse.ProtoReflect.Descriptor instead.
func (*GetSeatCategoryByIDResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{91}
}

func (x *GetSeatCategoryByIDResponse) GetSeatCategory() *SeatCategory {
	if x != nil {
		return x.SeatCategory
	}
	return nil
}

type GetSeatCategoryByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetSeatCategoryByNameRequest) Reset() {
	*x = GetSeatCategoryByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSeatCategoryByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeatCategoryByNameRequest) ProtoMessage() {}

func (x *GetSeatCategoryByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeatCategoryByNameRequest.ProtoReflect.Descriptor instead.
func (*GetSeatCategoryByNameRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{92}
}

func (x *GetSeatCategoryByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetSeatCategoryByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatCategory *SeatCategory `protobuf:"bytes,1,opt,name=seat_category,json=seatCategory,proto3" json:"seat_category,omitempty"`
}

func (x *GetSeatCategoryByNameResponse) Reset() {
	*x = GetSeatCategoryByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSeatCategoryByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeatCategoryByNameResponse) ProtoMessage() {}

func (x *GetSeatCategoryByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeatCategoryByNameResponse.ProtoReflect.Descriptor instead.
func (*GetSeatCategoryByNameResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{93}
}

func (x *GetSeatCategoryByNameResponse) GetSeatCategory() *SeatCategory {
	if x != nil {
		return x.SeatCategory
	}
	return nil
}

type UpdateSeatCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SeatCategory *SeatCategory `protobuf:"bytes,2,opt,name=seat_category,json=seatCategory,proto3" json:"seat_category,omitempty"`
}

func (x *UpdateSeatCategoryRequest) Reset() {
	*x = UpdateSeatCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSeatCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSeatCategoryRequest) ProtoMessage() {}

func (x *UpdateSeatCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSeatCategoryRequest.ProtoReflect.Descriptor instead.
func (*UpdateSeatCategoryRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{94}
}

func (x *UpdateSeatCategoryRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateSeatCategoryRequest) GetSeatCategory() *SeatCategory {
	if x != nil {
		return x.SeatCategory
	}
	return nil
}

type UpdateSeatCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateSeatCategoryResponse) Reset() {
	*x = UpdateSeatCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSeatCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSeatCategoryResponse) ProtoMessage() {}

func (x *UpdateSeatCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSeatCategoryResponse.ProtoReflect.Descriptor instead.
func (*UpdateSeatCategoryResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{95}
}

func (x *UpdateSeatCategoryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListSeatCategoriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListSeatCategoriesRequest) Reset() {
	*x = ListSeatCategoriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSeatCategoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSeatCategoriesRequest) ProtoMessage() {}

func (x *ListSeatCategoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSeatCategoriesRequest.ProtoReflect.Descriptor instead.
func (*ListSeatCategoriesRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{96}
}

type ListSeatCategoriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatCategories []*SeatCategory `protobuf:"bytes,1,rep,name=seat_categories,json=seatCategories,proto3" json:"seat_categories,omitempty"`
}

func (x *ListSeatCategoriesResponse) Reset() {
	*x = ListSeatCategoriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSeatCategoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSeatCategoriesResponse) ProtoMessage() {}

func (x *ListSeatCategoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSeatCategoriesResponse.ProtoReflect.Descriptor instead.
func (*ListSeatCategoriesResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{97}
}

func (x *ListSeatCategoriesResponse) GetSeatCategories() []*SeatCategory {
	if x != nil {
		return x.SeatCategories
	}
	return nil
}

// Theater screen
type TheaterScreen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	TheaterID    int32  `protobuf:"varint,2,opt,name=TheaterID,proto3" json:"TheaterID,omitempty"`
	ScreenNumber int32  `protobuf:"varint,3,opt,name=ScreenNumber,proto3" json:"ScreenNumber,omitempty"`
	SeatCapacity int32  `protobuf:"varint,4,opt,name=SeatCapacity,proto3" json:"SeatCapacity,omitempty"`
	ScreenTypeID int32  `protobuf:"varint,5,opt,name=ScreenTypeID,proto3" json:"ScreenTypeID,omitempty"`
}

func (x *TheaterScreen) Reset() {
	*x = TheaterScreen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TheaterScreen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TheaterScreen) ProtoMessage() {}

func (x *TheaterScreen) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TheaterScreen.ProtoReflect.Descriptor instead.
func (*TheaterScreen) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{98}
}

func (x *TheaterScreen) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *TheaterScreen) GetTheaterID() int32 {
	if x != nil {
		return x.TheaterID
	}
	return 0
}

func (x *TheaterScreen) GetScreenNumber() int32 {
	if x != nil {
		return x.ScreenNumber
	}
	return 0
}

func (x *TheaterScreen) GetSeatCapacity() int32 {
	if x != nil {
		return x.SeatCapacity
	}
	return 0
}

func (x *TheaterScreen) GetScreenTypeID() int32 {
	if x != nil {
		return x.ScreenTypeID
	}
	return 0
}

type AddTheaterScreenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheaterScreen *TheaterScreen `protobuf:"bytes,1,opt,name=TheaterScreen,proto3" json:"TheaterScreen,omitempty"`
}

func (x *AddTheaterScreenRequest) Reset() {
	*x = AddTheaterScreenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTheaterScreenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTheaterScreenRequest) ProtoMessage() {}

func (x *AddTheaterScreenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTheaterScreenRequest.ProtoReflect.Descriptor instead.
func (*AddTheaterScreenRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{99}
}

func (x *AddTheaterScreenRequest) GetTheaterScreen() *TheaterScreen {
	if x != nil {
		return x.TheaterScreen
	}
	return nil
}

type AddTheaterScreenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddTheaterScreenResponse) Reset() {
	*x = AddTheaterScreenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTheaterScreenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTheaterScreenResponse) ProtoMessage() {}

func (x *AddTheaterScreenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTheaterScreenResponse.ProtoReflect.Descriptor instead.
func (*AddTheaterScreenResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{100}
}

type DeleteTheaterScreenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheaterScreenId int32 `protobuf:"varint,1,opt,name=TheaterScreenId,proto3" json:"TheaterScreenId,omitempty"`
}

func (x *DeleteTheaterScreenRequest) Reset() {
	*x = DeleteTheaterScreenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTheaterScreenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTheaterScreenRequest) ProtoMessage() {}

func (x *DeleteTheaterScreenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTheaterScreenRequest.ProtoReflect.Descriptor instead.
func (*DeleteTheaterScreenRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{101}
}

func (x *DeleteTheaterScreenRequest) GetTheaterScreenId() int32 {
	if x != nil {
		return x.TheaterScreenId
	}
	return 0
}

type DeleteTheaterScreenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteTheaterScreenResponse) Reset() {
	*x = DeleteTheaterScreenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTheaterScreenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTheaterScreenResponse) ProtoMessage() {}

func (x *DeleteTheaterScreenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTheaterScreenResponse.ProtoReflect.Descriptor instead.
func (*DeleteTheaterScreenResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{102}
}

type DeleteTheaterScreenByNumberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheaterID    int32 `protobuf:"varint,1,opt,name=TheaterID,proto3" json:"TheaterID,omitempty"`
	ScreenNumber int32 `protobuf:"varint,2,opt,name=ScreenNumber,proto3" json:"ScreenNumber,omitempty"`
}

func (x *DeleteTheaterScreenByNumberRequest) Reset() {
	*x = DeleteTheaterScreenByNumberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTheaterScreenByNumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTheaterScreenByNumberRequest) ProtoMessage() {}

func (x *DeleteTheaterScreenByNumberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTheaterScreenByNumberRequest.ProtoReflect.Descriptor instead.
func (*DeleteTheaterScreenByNumberRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{103}
}

func (x *DeleteTheaterScreenByNumberRequest) GetTheaterID() int32 {
	if x != nil {
		return x.TheaterID
	}
	return 0
}

func (x *DeleteTheaterScreenByNumberRequest) GetScreenNumber() int32 {
	if x != nil {
		return x.ScreenNumber
	}
	return 0
}

type DeleteTheaterScreenByNumberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteTheaterScreenByNumberResponse) Reset() {
	*x = DeleteTheaterScreenByNumberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTheaterScreenByNumberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTheaterScreenByNumberResponse) ProtoMessage() {}

func (x *DeleteTheaterScreenByNumberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTheaterScreenByNumberResponse.ProtoReflect.Descriptor instead.
func (*DeleteTheaterScreenByNumberResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{104}
}

type GetTheaterScreenByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheaterScreenId int32 `protobuf:"varint,1,opt,name=TheaterScreenId,proto3" json:"TheaterScreenId,omitempty"`
}

func (x *GetTheaterScreenByIDRequest) Reset() {
	*x = GetTheaterScreenByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTheaterScreenByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTheaterScreenByIDRequest) ProtoMessage() {}

func (x *GetTheaterScreenByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTheaterScreenByIDRequest.ProtoReflect.Descriptor instead.
func (*GetTheaterScreenByIDRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{105}
}

func (x *GetTheaterScreenByIDRequest) GetTheaterScreenId() int32 {
	if x != nil {
		return x.TheaterScreenId
	}
	return 0
}

type GetTheaterScreenByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheaterScreen *TheaterScreen `protobuf:"bytes,1,opt,name=TheaterScreen,proto3" json:"TheaterScreen,omitempty"`
}

func (x *GetTheaterScreenByIDResponse) Reset() {
	*x = GetTheaterScreenByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTheaterScreenByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTheaterScreenByIDResponse) ProtoMessage() {}

func (x *GetTheaterScreenByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTheaterScreenByIDResponse.ProtoReflect.Descriptor instead.
func (*GetTheaterScreenByIDResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{106}
}

func (x *GetTheaterScreenByIDResponse) GetTheaterScreen() *TheaterScreen {
	if x != nil {
		return x.TheaterScreen
	}
	return nil
}

type GetTheaterScreenByNumberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheaterID    int32 `protobuf:"varint,1,opt,name=TheaterID,proto3" json:"TheaterID,omitempty"`
	ScreenNumber int32 `protobuf:"varint,2,opt,name=ScreenNumber,proto3" json:"ScreenNumber,omitempty"`
}

func (x *GetTheaterScreenByNumberRequest) Reset() {
	*x = GetTheaterScreenByNumberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTheaterScreenByNumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTheaterScreenByNumberRequest) ProtoMessage() {}

func (x *GetTheaterScreenByNumberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTheaterScreenByNumberRequest.ProtoReflect.Descriptor instead.
func (*GetTheaterScreenByNumberRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{107}
}

func (x *GetTheaterScreenByNumberRequest) GetTheaterID() int32 {
	if x != nil {
		return x.TheaterID
	}
	return 0
}

func (x *GetTheaterScreenByNumberRequest) GetScreenNumber() int32 {
	if x != nil {
		return x.ScreenNumber
	}
	return 0
}

type GetTheaterScreenByNumberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheaterScreen *TheaterScreen `protobuf:"bytes,1,opt,name=TheaterScreen,proto3" json:"TheaterScreen,omitempty"`
}

func (x *GetTheaterScreenByNumberResponse) Reset() {
	*x = GetTheaterScreenByNumberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTheaterScreenByNumberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTheaterScreenByNumberResponse) ProtoMessage() {}

func (x *GetTheaterScreenByNumberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTheaterScreenByNumberResponse.ProtoReflect.Descriptor instead.
func (*GetTheaterScreenByNumberResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{108}
}

func (x *GetTheaterScreenByNumberResponse) GetTheaterScreen() *TheaterScreen {
	if x != nil {
		return x.TheaterScreen
	}
	return nil
}

type UpdateTheaterScreenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheaterScreen *TheaterScreen `protobuf:"bytes,1,opt,name=TheaterScreen,proto3" json:"TheaterScreen,omitempty"`
}

func (x *UpdateTheaterScreenRequest) Reset() {
	*x = UpdateTheaterScreenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTheaterScreenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTheaterScreenRequest) ProtoMessage() {}

func (x *UpdateTheaterScreenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTheaterScreenRequest.ProtoReflect.Descriptor instead.
func (*UpdateTheaterScreenRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{109}
}

func (x *UpdateTheaterScreenRequest) GetTheaterScreen() *TheaterScreen {
	if x != nil {
		return x.TheaterScreen
	}
	return nil
}

type UpdateTheaterScreenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTheaterScreenResponse) Reset() {
	*x = UpdateTheaterScreenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTheaterScreenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTheaterScreenResponse) ProtoMessage() {}

func (x *UpdateTheaterScreenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTheaterScreenResponse.ProtoReflect.Descriptor instead.
func (*UpdateTheaterScreenResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{110}
}

type ListTheaterScreensRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheaterID int32 `protobuf:"varint,1,opt,name=TheaterID,proto3" json:"TheaterID,omitempty"`
}

func (x *ListTheaterScreensRequest) Reset() {
	*x = ListTheaterScreensRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTheaterScreensRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTheaterScreensRequest) ProtoMessage() {}

func (x *ListTheaterScreensRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTheaterScreensRequest.ProtoReflect.Descriptor instead.
func (*ListTheaterScreensRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{111}
}

func (x *ListTheaterScreensRequest) GetTheaterID() int32 {
	if x != nil {
		return x.TheaterID
	}
	return 0
}

type ListTheaterScreensResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheaterScreens []*TheaterScreen `protobuf:"bytes,1,rep,name=TheaterScreens,proto3" json:"TheaterScreens,omitempty"`
}

func (x *ListTheaterScreensResponse) Reset() {
	*x = ListTheaterScreensResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTheaterScreensResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTheaterScreensResponse) ProtoMessage() {}

func (x *ListTheaterScreensResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTheaterScreensResponse.ProtoReflect.Descriptor instead.
func (*ListTheaterScreensResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{112}
}

func (x *ListTheaterScreensResponse) GetTheaterScreens() []*TheaterScreen {
	if x != nil {
		return x.TheaterScreens
	}
	return nil
}

// Show time related messages
type Showtime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MovieId  int32                `protobuf:"varint,2,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
	ScreenId int32                `protobuf:"varint,3,opt,name=screen_id,json=screenId,proto3" json:"screen_id,omitempty"`
	ShowDate *timestamp.Timestamp `protobuf:"bytes,4,opt,name=show_date,json=showDate,proto3" json:"show_date,omitempty"`
	ShowTime *timestamp.Timestamp `protobuf:"bytes,5,opt,name=show_time,json=showTime,proto3" json:"show_time,omitempty"`
}

func (x *Showtime) Reset() {
	*x = Showtime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Showtime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Showtime) ProtoMessage() {}

func (x *Showtime) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Showtime.ProtoReflect.Descriptor instead.
func (*Showtime) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{113}
}

func (x *Showtime) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Showtime) GetMovieId() int32 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

func (x *Showtime) GetScreenId() int32 {
	if x != nil {
		return x.ScreenId
	}
	return 0
}

func (x *Showtime) GetShowDate() *timestamp.Timestamp {
	if x != nil {
		return x.ShowDate
	}
	return nil
}

func (x *Showtime) GetShowTime() *timestamp.Timestamp {
	if x != nil {
		return x.ShowTime
	}
	return nil
}

type AddShowtimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Showtime *Showtime `protobuf:"bytes,1,opt,name=showtime,proto3" json:"showtime,omitempty"`
}

func (x *AddShowtimeRequest) Reset() {
	*x = AddShowtimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddShowtimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddShowtimeRequest) ProtoMessage() {}

func (x *AddShowtimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddShowtimeRequest.ProtoReflect.Descriptor instead.
func (*AddShowtimeRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{114}
}

func (x *AddShowtimeRequest) GetShowtime() *Showtime {
	if x != nil {
		return x.Showtime
	}
	return nil
}

type AddShowtimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddShowtimeResponse) Reset() {
	*x = AddShowtimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddShowtimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddShowtimeResponse) ProtoMessage() {}

func (x *AddShowtimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddShowtimeResponse.ProtoReflect.Descriptor instead.
func (*AddShowtimeResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{115}
}

type DeleteShowtimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShowtimeId int32 `protobuf:"varint,1,opt,name=showtime_id,json=showtimeId,proto3" json:"showtime_id,omitempty"`
}

func (x *DeleteShowtimeRequest) Reset() {
	*x = DeleteShowtimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteShowtimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteShowtimeRequest) ProtoMessage() {}

func (x *DeleteShowtimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteShowtimeRequest.ProtoReflect.Descriptor instead.
func (*DeleteShowtimeRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{116}
}

func (x *DeleteShowtimeRequest) GetShowtimeId() int32 {
	if x != nil {
		return x.ShowtimeId
	}
	return 0
}

type DeleteShowtimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteShowtimeResponse) Reset() {
	*x = DeleteShowtimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteShowtimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteShowtimeResponse) ProtoMessage() {}

func (x *DeleteShowtimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteShowtimeResponse.ProtoReflect.Descriptor instead.
func (*DeleteShowtimeResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{117}
}

type DeleteShowtimeByDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieId  int32                `protobuf:"varint,1,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
	ScreenId int32                `protobuf:"varint,2,opt,name=screen_id,json=screenId,proto3" json:"screen_id,omitempty"`
	ShowDate *timestamp.Timestamp `protobuf:"bytes,3,opt,name=show_date,json=showDate,proto3" json:"show_date,omitempty"`
	ShowTime *timestamp.Timestamp `protobuf:"bytes,4,opt,name=show_time,json=showTime,proto3" json:"show_time,omitempty"`
}

func (x *DeleteShowtimeByDetailsRequest) Reset() {
	*x = DeleteShowtimeByDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteShowtimeByDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteShowtimeByDetailsRequest) ProtoMessage() {}

func (x *DeleteShowtimeByDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteShowtimeByDetailsRequest.ProtoReflect.Descriptor instead.
func (*DeleteShowtimeByDetailsRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{118}
}

func (x *DeleteShowtimeByDetailsRequest) GetMovieId() int32 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

func (x *DeleteShowtimeByDetailsRequest) GetScreenId() int32 {
	if x != nil {
		return x.ScreenId
	}
	return 0
}

func (x *DeleteShowtimeByDetailsRequest) GetShowDate() *timestamp.Timestamp {
	if x != nil {
		return x.ShowDate
	}
	return nil
}

func (x *DeleteShowtimeByDetailsRequest) GetShowTime() *timestamp.Timestamp {
	if x != nil {
		return x.ShowTime
	}
	return nil
}

type DeleteShowtimeByDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteShowtimeByDetailsResponse) Reset() {
	*x = DeleteShowtimeByDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteShowtimeByDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteShowtimeByDetailsResponse) ProtoMessage() {}

func (x *DeleteShowtimeByDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteShowtimeByDetailsResponse.ProtoReflect.Descriptor instead.
func (*DeleteShowtimeByDetailsResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{119}
}

type GetShowtimeByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShowtimeId int32 `protobuf:"varint,1,opt,name=showtime_id,json=showtimeId,proto3" json:"showtime_id,omitempty"`
}

func (x *GetShowtimeByIDRequest) Reset() {
	*x = GetShowtimeByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShowtimeByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShowtimeByIDRequest) ProtoMessage() {}

func (x *GetShowtimeByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShowtimeByIDRequest.ProtoReflect.Descriptor instead.
func (*GetShowtimeByIDRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{120}
}

func (x *GetShowtimeByIDRequest) GetShowtimeId() int32 {
	if x != nil {
		return x.ShowtimeId
	}
	return 0
}

type GetShowtimeByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Showtime *Showtime `protobuf:"bytes,1,opt,name=showtime,proto3" json:"showtime,omitempty"`
}

func (x *GetShowtimeByIDResponse) Reset() {
	*x = GetShowtimeByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShowtimeByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShowtimeByIDResponse) ProtoMessage() {}

func (x *GetShowtimeByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShowtimeByIDResponse.ProtoReflect.Descriptor instead.
func (*GetShowtimeByIDResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{121}
}

func (x *GetShowtimeByIDResponse) GetShowtime() *Showtime {
	if x != nil {
		return x.Showtime
	}
	return nil
}

type GetShowtimeByDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieId  int32                `protobuf:"varint,1,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
	ScreenId int32                `protobuf:"varint,2,opt,name=screen_id,json=screenId,proto3" json:"screen_id,omitempty"`
	ShowDate *timestamp.Timestamp `protobuf:"bytes,3,opt,name=show_date,json=showDate,proto3" json:"show_date,omitempty"`
	ShowTime *timestamp.Timestamp `protobuf:"bytes,4,opt,name=show_time,json=showTime,proto3" json:"show_time,omitempty"`
}

func (x *GetShowtimeByDetailsRequest) Reset() {
	*x = GetShowtimeByDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShowtimeByDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShowtimeByDetailsRequest) ProtoMessage() {}

func (x *GetShowtimeByDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShowtimeByDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetShowtimeByDetailsRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{122}
}

func (x *GetShowtimeByDetailsRequest) GetMovieId() int32 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

func (x *GetShowtimeByDetailsRequest) GetScreenId() int32 {
	if x != nil {
		return x.ScreenId
	}
	return 0
}

func (x *GetShowtimeByDetailsRequest) GetShowDate() *timestamp.Timestamp {
	if x != nil {
		return x.ShowDate
	}
	return nil
}

func (x *GetShowtimeByDetailsRequest) GetShowTime() *timestamp.Timestamp {
	if x != nil {
		return x.ShowTime
	}
	return nil
}

type GetShowtimeByDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Showtime *Showtime `protobuf:"bytes,1,opt,name=showtime,proto3" json:"showtime,omitempty"`
}

func (x *GetShowtimeByDetailsResponse) Reset() {
	*x = GetShowtimeByDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShowtimeByDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShowtimeByDetailsResponse) ProtoMessage() {}

func (x *GetShowtimeByDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShowtimeByDetailsResponse.ProtoReflect.Descriptor instead.
func (*GetShowtimeByDetailsResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{123}
}

func (x *GetShowtimeByDetailsResponse) GetShowtime() *Showtime {
	if x != nil {
		return x.Showtime
	}
	return nil
}

type UpdateShowtimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Showtime *Showtime `protobuf:"bytes,1,opt,name=showtime,proto3" json:"showtime,omitempty"`
}

func (x *UpdateShowtimeRequest) Reset() {
	*x = UpdateShowtimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateShowtimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateShowtimeRequest) ProtoMessage() {}

func (x *UpdateShowtimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateShowtimeRequest.ProtoReflect.Descriptor instead.
func (*UpdateShowtimeRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{124}
}

func (x *UpdateShowtimeRequest) GetShowtime() *Showtime {
	if x != nil {
		return x.Showtime
	}
	return nil
}

type UpdateShowtimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateShowtimeResponse) Reset() {
	*x = UpdateShowtimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateShowtimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateShowtimeResponse) ProtoMessage() {}

func (x *UpdateShowtimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateShowtimeResponse.ProtoReflect.Descriptor instead.
func (*UpdateShowtimeResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{125}
}

type ListShowtimesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieId int32 `protobuf:"varint,1,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
}

func (x *ListShowtimesRequest) Reset() {
	*x = ListShowtimesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListShowtimesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListShowtimesRequest) ProtoMessage() {}

func (x *ListShowtimesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListShowtimesRequest.ProtoReflect.Descriptor instead.
func (*ListShowtimesRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{126}
}

func (x *ListShowtimesRequest) GetMovieId() int32 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

type ListShowtimesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Showtimes []*Showtime `protobuf:"bytes,1,rep,name=showtimes,proto3" json:"showtimes,omitempty"`
}

func (x *ListShowtimesResponse) Reset() {
	*x = ListShowtimesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListShowtimesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListShowtimesResponse) ProtoMessage() {}

func (x *ListShowtimesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListShowtimesResponse.ProtoReflect.Descriptor instead.
func (*ListShowtimesResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{127}
}

func (x *ListShowtimesResponse) GetShowtimes() []*Showtime {
	if x != nil {
		return x.Showtimes
	}
	return nil
}

var File_movie_booking_movie_booking_proto protoreflect.FileDescriptor

var file_movie_booking_movie_booking_proto_rawDesc = []byte{
	0x0a, 0x21, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2f,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x7a, 0x0a, 0x0d, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x5d,
	0x0a, 0x17, 0x41, 0x64, 0x64, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x0e, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x0d,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x44, 0x0a,
	0x18, 0x41, 0x64, 0x64, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x60, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x42, 0x0a, 0x0e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x0d, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x47, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3b,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x7d, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x52, 0x0e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3d, 0x0a, 0x20, 0x47, 0x65,
	0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x22, 0x83, 0x01, 0x0a, 0x21, 0x47, 0x65,
	0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x44, 0x0a, 0x0f, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x0e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x43, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x42, 0x79, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x68, 0x65, 0x61, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69,
	0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x54, 0x68, 0x65, 0x61, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0f,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x52, 0x0e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x68, 0x0a, 0x2c,
	0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x42, 0x79, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x54, 0x68, 0x65, 0x61,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x68, 0x65, 0x61, 0x74,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x68, 0x65,
	0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x8f, 0x01, 0x0a, 0x2d, 0x47, 0x65, 0x74, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x0e,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x6b, 0x0a, 0x2d, 0x47, 0x65, 0x74, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x74,
	0x69, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x90, 0x01, 0x0a, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x4d, 0x6f, 0x76, 0x69,
	0x65, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x0e,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x74, 0x0a, 0x32, 0x47, 0x65, 0x74, 0x47,
	0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42,
	0x79, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x53, 0x68, 0x6f,
	0x77, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x95,
	0x01, 0x0a, 0x33, 0x47, 0x65, 0x74, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x41, 0x6e, 0x64, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x0e, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x7c, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69,
	0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x0d, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x30, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3b, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x6b, 0x0a, 0x2f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69,
	0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x49, 0x64, 0x41, 0x6e, 0x64, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x4c, 0x0a, 0x30, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x41,
	0x6e, 0x64, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x99, 0x01,
	0x0a, 0x3c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x41, 0x6e,
	0x64, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x53, 0x68, 0x6f,
	0x77, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x68, 0x65,
	0x61, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74,
	0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x6f, 0x77,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73,
	0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x59, 0x0a, 0x3d, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x42, 0x79, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x54, 0x68, 0x65, 0x61,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0xd7, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x4c,
	0x0a, 0x15, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x76, 0x69, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xf0, 0x01, 0x0a,
	0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22,
	0x2f, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x44, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xe3, 0x01, 0x0a, 0x05, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x67, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x41, 0x0a, 0x12,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x06, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x22,
	0x33, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x29, 0x0a, 0x05, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x52, 0x05, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x22, 0x2f, 0x0a, 0x12, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x13, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x87, 0x02, 0x0a,
	0x07, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x68, 0x65, 0x61,
	0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x68,
	0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f,
	0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x12, 0x26,
	0x0a, 0x0f, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0xf2, 0x01, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x54, 0x68,
	0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x53, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x68,
	0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x41,
	0x64, 0x64, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x35, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x68, 0x65,
	0x61, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74,
	0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x30, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74,
	0x65, 0x72, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x68, 0x65,
	0x61, 0x74, 0x65, 0x72, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x36, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x07, 0x74, 0x68,
	0x65, 0x61, 0x74, 0x65, 0x72, 0x22, 0x2d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x61,
	0x74, 0x65, 0x72, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4b, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74,
	0x65, 0x72, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2f, 0x0a, 0x07, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x07, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65,
	0x72, 0x22, 0x94, 0x02, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x68,
	0x65, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f,
	0x66, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73,
	0x12, 0x26, 0x0a, 0x0f, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x68, 0x65, 0x61, 0x74,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x15, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x49, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x31, 0x0a, 0x08, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x2e, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x08, 0x74, 0x68, 0x65, 0x61, 0x74,
	0x65, 0x72, 0x73, 0x22, 0x38, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65,
	0x72, 0x73, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x51, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x73, 0x42, 0x79, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a,
	0x08, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x54,
	0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x08, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x73,
	0x22, 0x43, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x68, 0x65,
	0x61, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x32, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x54, 0x68, 0x65, 0x61,
	0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x42, 0x0a, 0x18, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x35, 0x0a,
	0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x34, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x68,
	0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3b, 0x0a, 0x1f, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x43, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x68,
	0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74,
	0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x74, 0x68,
	0x65, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e,
	0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x74, 0x68, 0x65,
	0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x49, 0x0a, 0x0b, 0x54, 0x68, 0x65, 0x61,
	0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x68, 0x65, 0x61, 0x74,
	0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x31, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5c, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x54, 0x68, 0x65,
	0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x68, 0x65, 0x61,
	0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x56, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x68,
	0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x2a, 0x0a, 0x11, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x68, 0x65,
	0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x35, 0x0a, 0x19,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x59,
	0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x74, 0x68, 0x65,
	0x61, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e,
	0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x74, 0x68, 0x65,
	0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x40, 0x0a, 0x14, 0x41, 0x64, 0x64,
	0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x31, 0x0a, 0x15, 0x41,
	0x64, 0x64, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3f,
	0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22,
	0x34, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x33, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x0a, 0x1e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x40, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x46, 0x0a, 0x0a, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28,
	0x0a, 0x10, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x30, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x58, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x73, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x53, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x28, 0x0a, 0x10, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x34, 0x0a, 0x18, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x18, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x56, 0x0a, 0x17, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x22, 0x4c, 0x0a, 0x0c, 0x53, 0x65, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73,
	0x65, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x59, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x53, 0x65, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0d, 0x73, 0x65, 0x61,
	0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e,
	0x53, 0x65, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0c, 0x73, 0x65,
	0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x33, 0x0a, 0x17, 0x41, 0x64,
	0x64, 0x53, 0x65, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x45, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x61, 0x74, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10,
	0x73, 0x65, 0x61, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x65, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x65, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x35,
	0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3c, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x65, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x46, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x74, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x65, 0x61,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x5e, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x73, 0x65,
	0x61, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x53, 0x65, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0c, 0x73,
	0x65, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x32, 0x0a, 0x1c, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x60, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3f, 0x0a, 0x0d, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x65, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x0c, 0x73, 0x65, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x22, 0x6c, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x61, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3f,
	0x0a, 0x0d, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x65, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x52, 0x0c, 0x73, 0x65, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22,
	0x36, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x61, 0x74, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x1b, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x65, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x61, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x61, 0x74,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x43, 0x0a, 0x0f, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x65, 0x61, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0e, 0x73, 0x65, 0x61, 0x74, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0xa9, 0x01, 0x0a, 0x0d, 0x54, 0x68, 0x65, 0x61,
	0x74, 0x65, 0x72, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x68, 0x65,
	0x61, 0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x54, 0x68,
	0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x53,
	0x65, 0x61, 0x74, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x53, 0x65, 0x61, 0x74, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12,
	0x22, 0x0a, 0x0c, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x44, 0x22, 0x5c, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65,
	0x72, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41,
	0x0a, 0x0d, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x52, 0x0d, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x22, 0x1a, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x46, 0x0a,
	0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x54,
	0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x49, 0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x66, 0x0a, 0x22, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x68,
	0x65, 0x61, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x42, 0x79, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x68,
	0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x54,
	0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x25, 0x0a, 0x23,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x42, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x47, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65,
	0x72, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x54, 0x68, 0x65,
	0x61, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0d,
	0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x2e, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x52, 0x0d, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x22,
	0x63, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x42, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x22, 0x0a, 0x0c, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x22, 0x65, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74,
	0x65, 0x72, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x42, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0d, 0x54, 0x68, 0x65, 0x61,
	0x74, 0x65, 0x72, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x54,
	0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x0d, 0x54, 0x68,
	0x65, 0x61, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x22, 0x5f, 0x0a, 0x1a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0d, 0x54, 0x68, 0x65,
	0x61, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e,
	0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x0d, 0x54,
	0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x22, 0x1d, 0x0a, 0x1b,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x0a, 0x19, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x68, 0x65, 0x61,
	0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x54, 0x68, 0x65,
	0x61, 0x74, 0x65, 0x72, 0x49, 0x44, 0x22, 0x61, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x68,
	0x65, 0x61, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0e, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x68, 0x65, 0x61,
	0x74, 0x65, 0x72, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x0e, 0x54, 0x68, 0x65, 0x61, 0x74,
	0x65, 0x72, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x22, 0xc4, 0x01, 0x0a, 0x08, 0x53, 0x68,
	0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x37,
	0x0a, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x73,
	0x68, 0x6f, 0x77, 0x44, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x48, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65,
	0x52, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x41, 0x64,
	0x64, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x38, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x74,
	0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68,
	0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x73, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xca, 0x01, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x49, 0x64,
	0x12, 0x37, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x08, 0x73, 0x68, 0x6f, 0x77, 0x44, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x73, 0x68, 0x6f,
	0x77, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x21, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x77,
	0x74, 0x69, 0x6d, 0x65, 0x42, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x77,
	0x74, 0x69, 0x6d, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64,
	0x22, 0x4d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x73,
	0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x68, 0x6f,
	0x77, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x22,
	0xc7, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x42,
	0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x37, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x08, 0x73, 0x68, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x52, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x73, 0x68, 0x6f,
	0x77, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x74,
	0x69, 0x6d, 0x65, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x4b, 0x0a,
	0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65,
	0x52, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x6f, 0x77,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x34, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x73, 0x68, 0x6f,
	0x77, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x32, 0xc1, 0x03, 0x0a, 0x0c, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x0d, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x12, 0x22, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x52, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x12, 0x20, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x24, 0x2e, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x12, 0x20, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x9a, 0x30, 0x0a, 0x0e, 0x54,
	0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5b, 0x0a,
	0x0e, 0x41, 0x64, 0x64, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x23, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x41,
	0x64, 0x64, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x15, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42,
	0x79, 0x49, 0x44, 0x12, 0x26, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x68,
	0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2c, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79,
	0x49, 0x44, 0x12, 0x27, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x68,
	0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x61,
	0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x2e,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x68,
	0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x2e, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x10, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x25,
	0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0d,
	0x41, 0x64, 0x64, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x2e,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x64, 0x64,
	0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x41, 0x64, 0x64, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x25,
	0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a,
	0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x64, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x26, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x28, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x24, 0x2e, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x53, 0x65,
	0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x24, 0x2e, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x65, 0x61,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e,
	0x41, 0x64, 0x64, 0x53, 0x65, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x65, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49,
	0x44, 0x12, 0x27, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x65, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x79, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65,
	0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2d, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2e, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x6a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x42, 0x79, 0x49, 0x44, 0x12, 0x28, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x74, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2b, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a,
	0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x27, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x61, 0x74, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65,
	0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x27, 0x2e, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x65, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x61, 0x74, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4f, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x12, 0x1f, 0x2e,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x64, 0x64,
	0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x64,
	0x64, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5c, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65,
	0x72, 0x42, 0x79, 0x49, 0x44, 0x12, 0x22, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a,
	0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74,
	0x65, 0x72, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x29, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x42, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x12, 0x23, 0x2e, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x68,
	0x65, 0x61, 0x74, 0x65, 0x72, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x2e, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x68,
	0x65, 0x61, 0x74, 0x65, 0x72, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x42, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x68, 0x65, 0x61,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x21, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x73, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x49, 0x44, 0x12, 0x29, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x73, 0x42, 0x79,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x73, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x10, 0x41, 0x64,
	0x64, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x12, 0x25,
	0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x64,
	0x64, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a,
	0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x12, 0x28, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x68,
	0x65, 0x61, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x82, 0x01,
	0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x42, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x30, 0x2e,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x42, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x31, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x42, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x12, 0x29, 0x2e, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x68, 0x65,
	0x61, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x79, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x42, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2d, 0x2e,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x42, 0x79, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x42, 0x79, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x13,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x12, 0x28, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x12, 0x27,
	0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74,
	0x65, 0x72, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x52, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x20, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e,
	0x41, 0x64, 0x64, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x23, 0x2e, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x2c, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x42,
	0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2d, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x79, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x79, 0x49,
	0x44, 0x12, 0x24, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69,
	0x6d, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x79, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x29, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d,
	0x65, 0x42, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x79, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a,
	0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x23, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0d, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x22, 0x2e, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x25, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x41,
	0x64, 0x64, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x28,
	0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x28, 0x2e, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x7c, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x44, 0x12, 0x2e, 0x2e,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x82,
	0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x42, 0x79, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x44, 0x12, 0x30,
	0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79,
	0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x31, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e,
	0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x42, 0x79, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0xa0, 0x01, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49,
	0x64, 0x41, 0x6e, 0x64, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3a, 0x2e,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69,
	0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x49, 0x64, 0x41, 0x6e, 0x64, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xa3, 0x01, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x49,
	0x64, 0x12, 0x3b, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x42, 0x79, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x53, 0x68, 0x6f,
	0x77, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c,
	0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x69,
	0x6d, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xb2, 0x01, 0x0a,
	0x2b, 0x47, 0x65, 0x74, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x41,
	0x6e, 0x64, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x40, 0x2e, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x47,
	0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42,
	0x79, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x53, 0x68, 0x6f,
	0x77, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41,
	0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65,
	0x74, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x42, 0x79, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x53,
	0x68, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x29, 0x2e, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69,
	0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x76, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x2c, 0x2e, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xa9, 0x01, 0x0a, 0x28, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x42, 0x79, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x54, 0x68, 0x65, 0x61,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3d, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49,
	0x64, 0x41, 0x6e, 0x64, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64,
	0x41, 0x6e, 0x64, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0xd0, 0x01, 0x0a, 0x35, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x41, 0x6e, 0x64, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x4a,
	0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x42, 0x79, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x54, 0x68, 0x65,
	0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x69, 0x6d,
	0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4b, 0x2e, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x41, 0x6e, 0x64, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x2f, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_movie_booking_movie_booking_proto_rawDescOnce sync.Once
	file_movie_booking_movie_booking_proto_rawDescData = file_movie_booking_movie_booking_proto_rawDesc
)

func file_movie_booking_movie_booking_proto_rawDescGZIP() []byte {
	file_movie_booking_movie_booking_proto_rawDescOnce.Do(func() {
		file_movie_booking_movie_booking_proto_rawDescData = protoimpl.X.CompressGZIP(file_movie_booking_movie_booking_proto_rawDescData)
	})
	return file_movie_booking_movie_booking_proto_rawDescData
}

var file_movie_booking_movie_booking_proto_msgTypes = make([]protoimpl.MessageInfo, 128)
var file_movie_booking_movie_booking_proto_goTypes = []any{
	(*MovieSchedule)(nil),                                                 // 0: moviebooking.MovieSchedule
	(*AddMovieScheduleRequest)(nil),                                       // 1: moviebooking.AddMovieScheduleRequest
	(*AddMovieScheduleResponse)(nil),                                      // 2: moviebooking.AddMovieScheduleResponse
	(*UpdateMovieScheduleRequest)(nil),                                    // 3: moviebooking.UpdateMovieScheduleRequest
	(*UpdateMovieScheduleResponse)(nil),                                   // 4: moviebooking.UpdateMovieScheduleResponse
	(*GetAllMovieScheduleRequest)(nil),                                    // 5: moviebooking.GetAllMovieScheduleRequest
	(*GetAllMovieScheduleResponse)(nil),                                   // 6: moviebooking.GetAllMovieScheduleResponse
	(*GetMovieScheduleByMovieIdRequest)(nil),                              // 7: moviebooking.GetMovieScheduleByMovieIdRequest
	(*GetMovieScheduleByMovieIdResponse)(nil),                             // 8: moviebooking.GetMovieScheduleByMovieIdResponse
	(*GetMovieScheduleByTheaterIdRequest)(nil),                            // 9: moviebooking.GetMovieScheduleByTheaterIdRequest
	(*GetMovieScheduleByTheaterIdResponse)(nil),                           // 10: moviebooking.GetMovieScheduleByTheaterIdResponse
	(*GetMovieScheduleByMovieIdAndTheaterIdRequest)(nil),                  // 11: moviebooking.GetMovieScheduleByMovieIdAndTheaterIdRequest
	(*GetMovieScheduleByMovieIdAndTheaterIdResponse)(nil),                 // 12: moviebooking.GetMovieScheduleByMovieIdAndTheaterIdResponse
	(*GetMovieScheduleByMovieIdAndShowTimeIdRequest)(nil),                 // 13: moviebooking.GetMovieScheduleByMovieIdAndShowTimeIdRequest
	(*GetMovieScheduleByMovieIdAndShowTimeIdResponse)(nil),                // 14: moviebooking.GetMovieScheduleByMovieIdAndShowTimeIdResponse
	(*GetGetMovieScheduleByTheaterIdAndShowTimeIdRequest)(nil),            // 15: moviebooking.GetGetMovieScheduleByTheaterIdAndShowTimeIdRequest
	(*GetGetMovieScheduleByTheaterIdAndShowTimeIdResponse)(nil),           // 16: moviebooking.GetGetMovieScheduleByTheaterIdAndShowTimeIdResponse
	(*GetMovieScheduleByIDRequest)(nil),                                   // 17: moviebooking.GetMovieScheduleByIDRequest
	(*GetMovieScheduleByIDResponse)(nil),                                  // 18: moviebooking.GetMovieScheduleByIDResponse
	(*DeleteMovieScheduleByIdRequest)(nil),                                // 19: moviebooking.DeleteMovieScheduleByIdRequest
	(*DeleteMovieScheduleByIdResponse)(nil),                               // 20: moviebooking.DeleteMovieScheduleByIdResponse
	(*DeleteMovieScheduleByMovieIdAndTheaterIdRequest)(nil),               // 21: moviebooking.DeleteMovieScheduleByMovieIdAndTheaterIdRequest
	(*DeleteMovieScheduleByMovieIdAndTheaterIdResponse)(nil),              // 22: moviebooking.DeleteMovieScheduleByMovieIdAndTheaterIdResponse
	(*DeleteMovieScheduleByMovieIdAndTheaterIdAndShowTimeIdRequest)(nil),  // 23: moviebooking.DeleteMovieScheduleByMovieIdAndTheaterIdAndShowTimeIdRequest
	(*DeleteMovieScheduleByMovieIdAndTheaterIdAndShowTimeIdResponse)(nil), // 24: moviebooking.DeleteMovieScheduleByMovieIdAndTheaterIdAndShowTimeIdResponse
	(*RegisterMovieRequest)(nil),                                          // 25: moviebooking.RegisterMovieRequest
	(*RegisterMovieResponse)(nil),                                         // 26: moviebooking.RegisterMovieResponse
	(*UpdateMovieRequest)(nil),                                            // 27: moviebooking.UpdateMovieRequest
	(*UpdateMovieResponse)(nil),                                           // 28: moviebooking.UpdateMovieResponse
	(*ListMoviesRequest)(nil),                                             // 29: moviebooking.ListMoviesRequest
	(*Movie)(nil),                                                         // 30: moviebooking.Movie
	(*ListMoviesResponse)(nil),                                            // 31: moviebooking.ListMoviesResponse
	(*GetMovieDetailsRequest)(nil),                                        // 32: moviebooking.GetMovieDetailsRequest
	(*GetMovieDetailsResponse)(nil),                                       // 33: moviebooking.GetMovieDetailsResponse
	(*DeleteMovieRequest)(nil),                                            // 34: moviebooking.DeleteMovieRequest
	(*DeleteMovieResponse)(nil),                                           // 35: moviebooking.DeleteMovieResponse
	(*Theater)(nil),                                                       // 36: moviebooking.Theater
	(*AddTheaterRequest)(nil),                                             // 37: moviebooking.AddTheaterRequest
	(*AddTheaterResponse)(nil),                                            // 38: moviebooking.AddTheaterResponse
	(*DeleteTheaterRequest)(nil),                                          // 39: moviebooking.DeleteTheaterRequest
	(*DeleteTheaterResponse)(nil),                                         // 40: moviebooking.DeleteTheaterResponse
	(*DeleteTheaterByNameRequest)(nil),                                    // 41: moviebooking.DeleteTheaterByNameRequest
	(*DeleteTheaterByNameResponse)(nil),                                   // 42: moviebooking.DeleteTheaterByNameResponse
	(*GetTheaterByIDRequest)(nil),                                         // 43: moviebooking.GetTheaterByIDRequest
	(*GetTheaterByIDResponse)(nil),                                        // 44: moviebooking.GetTheaterByIDResponse
	(*GetTheaterByNameRequest)(nil),                                       // 45: moviebooking.GetTheaterByNameRequest
	(*GetTheaterByNameResponse)(nil),                                      // 46: moviebooking.GetTheaterByNameResponse
	(*UpdateTheaterRequest)(nil),                                          // 47: moviebooking.UpdateTheaterRequest
	(*UpdateTheaterResponse)(nil),                                         // 48: moviebooking.UpdateTheaterResponse
	(*ListTheatersRequest)(nil),                                           // 49: moviebooking.ListTheatersRequest
	(*ListTheatersResponse)(nil),                                          // 50: moviebooking.ListTheatersResponse
	(*GetTheatersByAdminIdRequest)(nil),                                   // 51: moviebooking.GetTheatersByAdminIdRequest
	(*GetTheatersByAdminIdResponse)(nil),                                  // 52: moviebooking.GetTheatersByAdminIdResponse
	(*AddTheaterTypeRequest)(nil),                                         // 53: moviebooking.AddTheaterTypeRequest
	(*AddTheaterTypeResponse)(nil),                                        // 54: moviebooking.AddTheaterTypeResponse
	(*DeleteTheaterTypeRequest)(nil),                                      // 55: moviebooking.DeleteTheaterTypeRequest
	(*DeleteTheaterTypeResponse)(nil),                                     // 56: moviebooking.DeleteTheaterTypeResponse
	(*DeleteTheaterTypeByNameRequest)(nil),                                // 57: moviebooking.DeleteTheaterTypeByNameRequest
	(*DeleteTheaterTypeByNameResponse)(nil),                               // 58: moviebooking.DeleteTheaterTypeByNameResponse
	(*GetTheaterTypeByIDRequest)(nil),                                     // 59: moviebooking.GetTheaterTypeByIDRequest
	(*GetTheaterTypeByIDResponse)(nil),                                    // 60: moviebooking.GetTheaterTypeByIDResponse
	(*TheaterType)(nil),                                                   // 61: moviebooking.TheaterType
	(*GetTheaterTypeByNameRequest)(nil),                                   // 62: moviebooking.GetTheaterTypeByNameRequest
	(*GetTheaterTypeBynameResponse)(nil),                                  // 63: moviebooking.GetTheaterTypeBynameResponse
	(*UpdateTheaterTypeRequest)(nil),                                      // 64: moviebooking.UpdateTheaterTypeRequest
	(*UpdateTheaterTypeResponse)(nil),                                     // 65: moviebooking.UpdateTheaterTypeResponse
	(*ListTheaterTypesRequest)(nil),                                       // 66: moviebooking.ListTheaterTypesRequest
	(*ListTheaterTypeResponse)(nil),                                       // 67: moviebooking.ListTheaterTypeResponse
	(*AddScreenTypeRequest)(nil),                                          // 68: moviebooking.AddScreenTypeRequest
	(*AddScreenTypeResponse)(nil),                                         // 69: moviebooking.AddScreenTypeResponse
	(*DeleteScreenTypeRequest)(nil),                                       // 70: moviebooking.DeleteScreenTypeRequest
	(*DeleteScreenTypeResponse)(nil),                                      // 71: moviebooking.DeleteScreenTypeResponse
	(*DeleteScreenTypeByNameRequest)(nil),                                 // 72: moviebooking.DeleteScreenTypeByNameRequest
	(*DeleteScreenTypeByNameResponse)(nil),                                // 73: moviebooking.DeleteScreenTypeByNameResponse
	(*GetScreenTypeByIDRequest)(nil),                                      // 74: moviebooking.GetScreenTypeByIDRequest
	(*GetScreenTypeByIDResponse)(nil),                                     // 75: moviebooking.GetScreenTypeByIDResponse
	(*ScreenType)(nil),                                                    // 76: moviebooking.ScreenType
	(*GetScreenTypeByNameRequest)(nil),                                    // 77: moviebooking.GetScreenTypeByNameRequest
	(*GetScreenTypeByNameResponse)(nil),                                   // 78: moviebooking.GetScreenTypeByNameResponse
	(*UpdateScreenTypeRequest)(nil),                                       // 79: moviebooking.UpdateScreenTypeRequest
	(*UpdateScreenTypeResponse)(nil),                                      // 80: moviebooking.UpdateScreenTypeResponse
	(*ListScreenTypesRequest)(nil),                                        // 81: moviebooking.ListScreenTypesRequest
	(*ListScreenTypesResponse)(nil),                                       // 82: moviebooking.ListScreenTypesResponse
	(*SeatCategory)(nil),                                                  // 83: moviebooking.SeatCategory
	(*AddSeatCategoryRequest)(nil),                                        // 84: moviebooking.AddSeatCategoryRequest
	(*AddSeatCategoryResponse)(nil),                                       // 85: moviebooking.AddSeatCategoryResponse
	(*DeleteSeatCategoryRequest)(nil),                                     // 86: moviebooking.DeleteSeatCategoryRequest
	(*DeleteSeatCategoryResponse)(nil),                                    // 87: moviebooking.DeleteSeatCategoryResponse
	(*DeleteSeatCategoryByNameRequest)(nil),                               // 88: moviebooking.DeleteSeatCategoryByNameRequest
	(*DeleteSeatCategoryByNameResponse)(nil),                              // 89: moviebooking.DeleteSeatCategoryByNameResponse
	(*GetSeatCategoryByIDRequest)(nil),                                    // 90: moviebooking.GetSeatCategoryByIDRequest
	(*GetSeatCategoryByIDResponse)(nil),                                   // 91: moviebooking.GetSeatCategoryByIDResponse
	(*GetSeatCategoryByNameRequest)(nil),                                  // 92: moviebooking.GetSeatCategoryByNameRequest
	(*GetSeatCategoryByNameResponse)(nil),                                 // 93: moviebooking.GetSeatCategoryByNameResponse
	(*UpdateSeatCategoryRequest)(nil),                                     // 94: moviebooking.UpdateSeatCategoryRequest
	(*UpdateSeatCategoryResponse)(nil),                                    // 95: moviebooking.UpdateSeatCategoryResponse
	(*ListSeatCategoriesRequest)(nil),                                     // 96: moviebooking.ListSeatCategoriesRequest
	(*ListSeatCategoriesResponse)(nil),                                    // 97: moviebooking.ListSeatCategoriesResponse
	(*TheaterScreen)(nil),                                                 // 98: moviebooking.TheaterScreen
	(*AddTheaterScreenRequest)(nil),                                       // 99: moviebooking.AddTheaterScreenRequest
	(*AddTheaterScreenResponse)(nil),                                      // 100: moviebooking.AddTheaterScreenResponse
	(*DeleteTheaterScreenRequest)(nil),                                    // 101: moviebooking.DeleteTheaterScreenRequest
	(*DeleteTheaterScreenResponse)(nil),                                   // 102: moviebooking.DeleteTheaterScreenResponse
	(*DeleteTheaterScreenByNumberRequest)(nil),                            // 103: moviebooking.DeleteTheaterScreenByNumberRequest
	(*DeleteTheaterScreenByNumberResponse)(nil),                           // 104: moviebooking.DeleteTheaterScreenByNumberResponse
	(*GetTheaterScreenByIDRequest)(nil),                                   // 105: moviebooking.GetTheaterScreenByIDRequest
	(*GetTheaterScreenByIDResponse)(nil),                                  // 106: moviebooking.GetTheaterScreenByIDResponse
	(*GetTheaterScreenByNumberRequest)(nil),                               // 107: moviebooking.GetTheaterScreenByNumberRequest
	(*GetTheaterScreenByNumberResponse)(nil),                              // 108: moviebooking.GetTheaterScreenByNumberResponse
	(*UpdateTheaterScreenRequest)(nil),                                    // 109: moviebooking.UpdateTheaterScreenRequest
	(*UpdateTheaterScreenResponse)(nil),                                   // 110: moviebooking.UpdateTheaterScreenResponse
	(*ListTheaterScreensRequest)(nil),                                     // 111: moviebooking.ListTheaterScreensRequest
	(*ListTheaterScreensResponse)(nil),                                    // 112: moviebooking.ListTheaterScreensResponse
	(*Showtime)(nil),                                                      // 113: moviebooking.Showtime
	(*AddShowtimeRequest)(nil),                                            // 114: moviebooking.AddShowtimeRequest
	(*AddShowtimeResponse)(nil),                                           // 115: moviebooking.AddShowtimeResponse
	(*DeleteShowtimeRequest)(nil),                                         // 116: moviebooking.DeleteShowtimeRequest
	(*DeleteShowtimeResponse)(nil),                                        // 117: moviebooking.DeleteShowtimeResponse
	(*DeleteShowtimeByDetailsRequest)(nil),                                // 118: moviebooking.DeleteShowtimeByDetailsRequest
	(*DeleteShowtimeByDetailsResponse)(nil),                               // 119: moviebooking.DeleteShowtimeByDetailsResponse
	(*GetShowtimeByIDRequest)(nil),                                        // 120: moviebooking.GetShowtimeByIDRequest
	(*GetShowtimeByIDResponse)(nil),                                       // 121: moviebooking.GetShowtimeByIDResponse
	(*GetShowtimeByDetailsRequest)(nil),                                   // 122: moviebooking.GetShowtimeByDetailsRequest
	(*GetShowtimeByDetailsResponse)(nil),                                  // 123: moviebooking.GetShowtimeByDetailsResponse
	(*UpdateShowtimeRequest)(nil),                                         // 124: moviebooking.UpdateShowtimeRequest
	(*UpdateShowtimeResponse)(nil),                                        // 125: moviebooking.UpdateShowtimeResponse
	(*ListShowtimesRequest)(nil),                                          // 126: moviebooking.ListShowtimesRequest
	(*ListShowtimesResponse)(nil),                                         // 127: moviebooking.ListShowtimesResponse
	(*timestamp.Timestamp)(nil),                                           // 128: google.protobuf.Timestamp
}
var file_movie_booking_movie_booking_proto_depIdxs = []int32{
	0,   // 0: moviebooking.AddMovieScheduleRequest.movie_schedule:type_name -> moviebooking.MovieSchedule
	0,   // 1: moviebooking.UpdateMovieScheduleRequest.movie_schedule:type_name -> moviebooking.MovieSchedule
	0,   // 2: moviebooking.GetAllMovieScheduleResponse.movie_schedules:type_name -> moviebooking.MovieSchedule
	0,   // 3: moviebooking.GetMovieScheduleByMovieIdResponse.movie_schedules:type_name -> moviebooking.MovieSchedule
	0,   // 4: moviebooking.GetMovieScheduleByTheaterIdResponse.movie_schedules:type_name -> moviebooking.MovieSchedule
	0,   // 5: moviebooking.GetMovieScheduleByMovieIdAndTheaterIdResponse.movie_schedules:type_name -> moviebooking.MovieSchedule
	0,   // 6: moviebooking.GetMovieScheduleByMovieIdAndShowTimeIdResponse.movie_schedules:type_name -> moviebooking.MovieSchedule
	0,   // 7: moviebooking.GetGetMovieScheduleByTheaterIdAndShowTimeIdResponse.movie_schedules:type_name -> moviebooking.MovieSchedule
	0,   // 8: moviebooking.GetMovieScheduleByIDResponse.movie_schedule:type_name -> moviebooking.MovieSchedule
	30,  // 9: moviebooking.ListMoviesResponse.movies:type_name -> moviebooking.Movie
	30,  // 10: moviebooking.GetMovieDetailsResponse.movie:type_name -> moviebooking.Movie
	36,  // 11: moviebooking.GetTheaterByIDResponse.theater:type_name -> moviebooking.Theater
	36,  // 12: moviebooking.GetTheaterByNameResponse.theater:type_name -> moviebooking.Theater
	36,  // 13: moviebooking.ListTheatersResponse.theaters:type_name -> moviebooking.Theater
	36,  // 14: moviebooking.GetTheatersByAdminIdResponse.theaters:type_name -> moviebooking.Theater
	61,  // 15: moviebooking.GetTheaterTypeByIDResponse.theater_type:type_name -> moviebooking.TheaterType
	61,  // 16: moviebooking.GetTheaterTypeBynameResponse.theater_type:type_name -> moviebooking.TheaterType
	61,  // 17: moviebooking.ListTheaterTypeResponse.theater_types:type_name -> moviebooking.TheaterType
	76,  // 18: moviebooking.GetScreenTypeByIDResponse.screen_type:type_name -> moviebooking.ScreenType
	76,  // 19: moviebooking.GetScreenTypeByNameResponse.screen_type:type_name -> moviebooking.ScreenType
	76,  // 20: moviebooking.ListScreenTypesResponse.screen_types:type_name -> moviebooking.ScreenType
	83,  // 21: moviebooking.AddSeatCategoryRequest.seat_category:type_name -> moviebooking.SeatCategory
	83,  // 22: moviebooking.GetSeatCategoryByIDResponse.seat_category:type_name -> moviebooking.SeatCategory
	83,  // 23: moviebooking.GetSeatCategoryByNameResponse.seat_category:type_name -> moviebooking.SeatCategory
	83,  // 24: moviebooking.UpdateSeatCategoryRequest.seat_category:type_name -> moviebooking.SeatCategory
	83,  // 25: moviebooking.ListSeatCategoriesResponse.seat_categories:type_name -> moviebooking.SeatCategory
	98,  // 26: moviebooking.AddTheaterScreenRequest.TheaterScreen:type_name -> moviebooking.TheaterScreen
	98,  // 27: moviebooking.GetTheaterScreenByIDResponse.TheaterScreen:type_name -> moviebooking.TheaterScreen
	98,  // 28: moviebooking.GetTheaterScreenByNumberResponse.TheaterScreen:type_name -> moviebooking.TheaterScreen
	98,  // 29: moviebooking.UpdateTheaterScreenRequest.TheaterScreen:type_name -> moviebooking.TheaterScreen
	98,  // 30: moviebooking.ListTheaterScreensResponse.TheaterScreens:type_name -> moviebooking.TheaterScreen
	128, // 31: moviebooking.Showtime.show_date:type_name -> google.protobuf.Timestamp
	128, // 32: moviebooking.Showtime.show_time:type_name -> google.protobuf.Timestamp
	113, // 33: moviebooking.AddShowtimeRequest.showtime:type_name -> moviebooking.Showtime
	128, // 34: moviebooking.DeleteShowtimeByDetailsRequest.show_date:type_name -> google.protobuf.Timestamp
	128, // 35: moviebooking.DeleteShowtimeByDetailsRequest.show_time:type_name -> google.protobuf.Timestamp
	113, // 36: moviebooking.GetShowtimeByIDResponse.showtime:type_name -> moviebooking.Showtime
	128, // 37: moviebooking.GetShowtimeByDetailsRequest.show_date:type_name -> google.protobuf.Timestamp
	128, // 38: moviebooking.GetShowtimeByDetailsRequest.show_time:type_name -> google.protobuf.Timestamp
	113, // 39: moviebooking.GetShowtimeByDetailsResponse.showtime:type_name -> moviebooking.Showtime
	113, // 40: moviebooking.UpdateShowtimeRequest.showtime:type_name -> moviebooking.Showtime
	113, // 41: moviebooking.ListShowtimesResponse.showtimes:type_name -> moviebooking.Showtime
	25,  // 42: moviebooking.MovieService.RegisterMovie:input_type -> moviebooking.RegisterMovieRequest
	27,  // 43: moviebooking.MovieService.UpdateMovie:input_type -> moviebooking.UpdateMovieRequest
	29,  // 44: moviebooking.MovieService.ListMovies:input_type -> moviebooking.ListMoviesRequest
	32,  // 45: moviebooking.MovieService.GetMovieDetails:input_type -> moviebooking.GetMovieDetailsRequest
	34,  // 46: moviebooking.MovieService.DeleteMovie:input_type -> moviebooking.DeleteMovieRequest
	53,  // 47: moviebooking.TheatreService.AddTheaterType:input_type -> moviebooking.AddTheaterTypeRequest
	55,  // 48: moviebooking.TheatreService.DeleteTheaterTypeByID:input_type -> moviebooking.DeleteTheaterTypeRequest
	57,  // 49: moviebooking.TheatreService.DeleteTheaterTypeByName:input_type -> moviebooking.DeleteTheaterTypeByNameRequest
	59,  // 50: moviebooking.TheatreService.GetTheaterTypeByID:input_type -> moviebooking.GetTheaterTypeByIDRequest
	62,  // 51: moviebooking.TheatreService.GetTheaterTypeByName:input_type -> moviebooking.GetTheaterTypeByNameRequest
	64,  // 52: moviebooking.TheatreService.UpdateTheaterType:input_type -> moviebooking.UpdateTheaterTypeRequest
	66,  // 53: moviebooking.TheatreService.ListTheaterTypes:input_type -> moviebooking.ListTheaterTypesRequest
	68,  // 54: moviebooking.TheatreService.AddScreenType:input_type -> moviebooking.AddScreenTypeRequest
	70,  // 55: moviebooking.TheatreService.DeleteScreenTypeByID:input_type -> moviebooking.DeleteScreenTypeRequest
	72,  // 56: moviebooking.TheatreService.DeleteScreenTypeByName:input_type -> moviebooking.DeleteScreenTypeByNameRequest
	74,  // 57: moviebooking.TheatreService.GetScreenTypeByID:input_type -> moviebooking.GetScreenTypeByIDRequest
	77,  // 58: moviebooking.TheatreService.GetScreenTypeByName:input_type -> moviebooking.GetScreenTypeByNameRequest
	79,  // 59: moviebooking.TheatreService.UpdateScreenType:input_type -> moviebooking.UpdateScreenTypeRequest
	81,  // 60: moviebooking.TheatreService.ListScreenTypes:input_type -> moviebooking.ListScreenTypesRequest
	84,  // 61: moviebooking.TheatreService.AddSeatCategory:input_type -> moviebooking.AddSeatCategoryRequest
	86,  // 62: moviebooking.TheatreService.DeleteSeatCategoryByID:input_type -> moviebooking.DeleteSeatCategoryRequest
	88,  // 63: moviebooking.TheatreService.DeleteSeatCategoryByName:input_type -> moviebooking.DeleteSeatCategoryByNameRequest
	90,  // 64: moviebooking.TheatreService.GetSeatCategoryByID:input_type -> moviebooking.GetSeatCategoryByIDRequest
	92,  // 65: moviebooking.TheatreService.GetSeatCategoryByName:input_type -> moviebooking.GetSeatCategoryByNameRequest
	94,  // 66: moviebooking.TheatreService.UpdateSeatCategory:input_type -> moviebooking.UpdateSeatCategoryRequest
	96,  // 67: moviebooking.TheatreService.ListSeatCategories:input_type -> moviebooking.ListSeatCategoriesRequest
	37,  // 68: moviebooking.TheatreService.AddTheater:input_type -> moviebooking.AddTheaterRequest
	39,  // 69: moviebooking.TheatreService.DeleteTheaterByID:input_type -> moviebooking.DeleteTheaterRequest
	41,  // 70: moviebooking.TheatreService.DeleteTheaterByName:input_type -> moviebooking.DeleteTheaterByNameRequest
	43,  // 71: moviebooking.TheatreService.GetTheaterByID:input_type -> moviebooking.GetTheaterByIDRequest
	45,  // 72: moviebooking.TheatreService.GetTheaterByName:input_type -> moviebooking.GetTheaterByNameRequest
	47,  // 73: moviebooking.TheatreService.UpdateTheater:input_type -> moviebooking.UpdateTheaterRequest
	49,  // 74: moviebooking.TheatreService.ListTheaters:input_type -> moviebooking.ListTheatersRequest
	51,  // 75: moviebooking.TheatreService.GetTheatersByAdminID:input_type -> moviebooking.GetTheatersByAdminIdRequest
	99,  // 76: moviebooking.TheatreService.AddTheaterScreen:input_type -> moviebooking.AddTheaterScreenRequest
	101, // 77: moviebooking.TheatreService.DeleteTheaterScreenByID:input_type -> moviebooking.DeleteTheaterScreenRequest
	103, // 78: moviebooking.TheatreService.DeleteTheaterScreenByNumber:input_type -> moviebooking.DeleteTheaterScreenByNumberRequest
	105, // 79: moviebooking.TheatreService.GetTheaterScreenByID:input_type -> moviebooking.GetTheaterScreenByIDRequest
	107, // 80: moviebooking.TheatreService.GetTheaterScreenByNumber:input_type -> moviebooking.GetTheaterScreenByNumberRequest
	109, // 81: moviebooking.TheatreService.UpdateTheaterScreen:input_type -> moviebooking.UpdateTheaterScreenRequest
	111, // 82: moviebooking.TheatreService.ListTheaterScreens:input_type -> moviebooking.ListTheaterScreensRequest
	114, // 83: moviebooking.TheatreService.AddShowtime:input_type -> moviebooking.AddShowtimeRequest
	116, // 84: moviebooking.TheatreService.DeleteShowtimeByID:input_type -> moviebooking.DeleteShowtimeRequest
	118, // 85: moviebooking.TheatreService.DeleteShowtimeByDetails:input_type -> moviebooking.DeleteShowtimeByDetailsRequest
	120, // 86: moviebooking.TheatreService.GetShowtimeByID:input_type -> moviebooking.GetShowtimeByIDRequest
	122, // 87: moviebooking.TheatreService.GetShowtimeByDetails:input_type -> moviebooking.GetShowtimeByDetailsRequest
	124, // 88: moviebooking.TheatreService.UpdateShowtime:input_type -> moviebooking.UpdateShowtimeRequest
	126, // 89: moviebooking.TheatreService.ListShowtimes:input_type -> moviebooking.ListShowtimesRequest
	1,   // 90: moviebooking.TheatreService.AddMovieSchedule:input_type -> moviebooking.AddMovieScheduleRequest
	3,   // 91: moviebooking.TheatreService.UpdateMovieSchedule:input_type -> moviebooking.UpdateMovieScheduleRequest
	5,   // 92: moviebooking.TheatreService.GetAllMovieSchedules:input_type -> moviebooking.GetAllMovieScheduleRequest
	7,   // 93: moviebooking.TheatreService.GetMovieScheduleByMovieID:input_type -> moviebooking.GetMovieScheduleByMovieIdRequest
	9,   // 94: moviebooking.TheatreService.GetMovieScheduleByTheaterID:input_type -> moviebooking.GetMovieScheduleByTheaterIdRequest
	11,  // 95: moviebooking.TheatreService.GetMovieScheduleByMovieIdAndTheaterId:input_type -> moviebooking.GetMovieScheduleByMovieIdAndTheaterIdRequest
	13,  // 96: moviebooking.TheatreService.GetMovieScheduleByMovieIdAndShowTimeId:input_type -> moviebooking.GetMovieScheduleByMovieIdAndShowTimeIdRequest
	15,  // 97: moviebooking.TheatreService.GetGetMovieScheduleByTheaterIdAndShowTimeId:input_type -> moviebooking.GetGetMovieScheduleByTheaterIdAndShowTimeIdRequest
	17,  // 98: moviebooking.TheatreService.GetMovieScheduleByID:input_type -> moviebooking.GetMovieScheduleByIDRequest
	19,  // 99: moviebooking.TheatreService.DeleteMovieScheduleById:input_type -> moviebooking.DeleteMovieScheduleByIdRequest
	21,  // 100: moviebooking.TheatreService.DeleteMovieScheduleByMovieIdAndTheaterId:input_type -> moviebooking.DeleteMovieScheduleByMovieIdAndTheaterIdRequest
	23,  // 101: moviebooking.TheatreService.DeleteMovieScheduleByMovieIdAndTheaterIdAndShowTimeId:input_type -> moviebooking.DeleteMovieScheduleByMovieIdAndTheaterIdAndShowTimeIdRequest
	26,  // 102: moviebooking.MovieService.RegisterMovie:output_type -> moviebooking.RegisterMovieResponse
	28,  // 103: moviebooking.MovieService.UpdateMovie:output_type -> moviebooking.UpdateMovieResponse
	31,  // 104: moviebooking.MovieService.ListMovies:output_type -> moviebooking.ListMoviesResponse
	33,  // 105: moviebooking.MovieService.GetMovieDetails:output_type -> moviebooking.GetMovieDetailsResponse
	35,  // 106: moviebooking.MovieService.DeleteMovie:output_type -> moviebooking.DeleteMovieResponse
	54,  // 107: moviebooking.TheatreService.AddTheaterType:output_type -> moviebooking.AddTheaterTypeResponse
	56,  // 108: moviebooking.TheatreService.DeleteTheaterTypeByID:output_type -> moviebooking.DeleteTheaterTypeResponse
	58,  // 109: moviebooking.TheatreService.DeleteTheaterTypeByName:output_type -> moviebooking.DeleteTheaterTypeByNameResponse
	60,  // 110: moviebooking.TheatreService.GetTheaterTypeByID:output_type -> moviebooking.GetTheaterTypeByIDResponse
	63,  // 111: moviebooking.TheatreService.GetTheaterTypeByName:output_type -> moviebooking.GetTheaterTypeBynameResponse
	65,  // 112: moviebooking.TheatreService.UpdateTheaterType:output_type -> moviebooking.UpdateTheaterTypeResponse
	67,  // 113: moviebooking.TheatreService.ListTheaterTypes:output_type -> moviebooking.ListTheaterTypeResponse
	69,  // 114: moviebooking.TheatreService.AddScreenType:output_type -> moviebooking.AddScreenTypeResponse
	71,  // 115: moviebooking.TheatreService.DeleteScreenTypeByID:output_type -> moviebooking.DeleteScreenTypeResponse
	73,  // 116: moviebooking.TheatreService.DeleteScreenTypeByName:output_type -> moviebooking.DeleteScreenTypeByNameResponse
	75,  // 117: moviebooking.TheatreService.GetScreenTypeByID:output_type -> moviebooking.GetScreenTypeByIDResponse
	78,  // 118: moviebooking.TheatreService.GetScreenTypeByName:output_type -> moviebooking.GetScreenTypeByNameResponse
	80,  // 119: moviebooking.TheatreService.UpdateScreenType:output_type -> moviebooking.UpdateScreenTypeResponse
	82,  // 120: moviebooking.TheatreService.ListScreenTypes:output_type -> moviebooking.ListScreenTypesResponse
	85,  // 121: moviebooking.TheatreService.AddSeatCategory:output_type -> moviebooking.AddSeatCategoryResponse
	87,  // 122: moviebooking.TheatreService.DeleteSeatCategoryByID:output_type -> moviebooking.DeleteSeatCategoryResponse
	89,  // 123: moviebooking.TheatreService.DeleteSeatCategoryByName:output_type -> moviebooking.DeleteSeatCategoryByNameResponse
	91,  // 124: moviebooking.TheatreService.GetSeatCategoryByID:output_type -> moviebooking.GetSeatCategoryByIDResponse
	93,  // 125: moviebooking.TheatreService.GetSeatCategoryByName:output_type -> moviebooking.GetSeatCategoryByNameResponse
	95,  // 126: moviebooking.TheatreService.UpdateSeatCategory:output_type -> moviebooking.UpdateSeatCategoryResponse
	97,  // 127: moviebooking.TheatreService.ListSeatCategories:output_type -> moviebooking.ListSeatCategoriesResponse
	38,  // 128: moviebooking.TheatreService.AddTheater:output_type -> moviebooking.AddTheaterResponse
	40,  // 129: moviebooking.TheatreService.DeleteTheaterByID:output_type -> moviebooking.DeleteTheaterResponse
	42,  // 130: moviebooking.TheatreService.DeleteTheaterByName:output_type -> moviebooking.DeleteTheaterByNameResponse
	44,  // 131: moviebooking.TheatreService.GetTheaterByID:output_type -> moviebooking.GetTheaterByIDResponse
	46,  // 132: moviebooking.TheatreService.GetTheaterByName:output_type -> moviebooking.GetTheaterByNameResponse
	48,  // 133: moviebooking.TheatreService.UpdateTheater:output_type -> moviebooking.UpdateTheaterResponse
	50,  // 134: moviebooking.TheatreService.ListTheaters:output_type -> moviebooking.ListTheatersResponse
	52,  // 135: moviebooking.TheatreService.GetTheatersByAdminID:output_type -> moviebooking.GetTheatersByAdminIdResponse
	100, // 136: moviebooking.TheatreService.AddTheaterScreen:output_type -> moviebooking.AddTheaterScreenResponse
	102, // 137: moviebooking.TheatreService.DeleteTheaterScreenByID:output_type -> moviebooking.DeleteTheaterScreenResponse
	104, // 138: moviebooking.TheatreService.DeleteTheaterScreenByNumber:output_type -> moviebooking.DeleteTheaterScreenByNumberResponse
	106, // 139: moviebooking.TheatreService.GetTheaterScreenByID:output_type -> moviebooking.GetTheaterScreenByIDResponse
	108, // 140: moviebooking.TheatreService.GetTheaterScreenByNumber:output_type -> moviebooking.GetTheaterScreenByNumberResponse
	110, // 141: moviebooking.TheatreService.UpdateTheaterScreen:output_type -> moviebooking.UpdateTheaterScreenResponse
	112, // 142: moviebooking.TheatreService.ListTheaterScreens:output_type -> moviebooking.ListTheaterScreensResponse
	115, // 143: moviebooking.TheatreService.AddShowtime:output_type -> moviebooking.AddShowtimeResponse
	117, // 144: moviebooking.TheatreService.DeleteShowtimeByID:output_type -> moviebooking.DeleteShowtimeResponse
	119, // 145: moviebooking.TheatreService.DeleteShowtimeByDetails:output_type -> moviebooking.DeleteShowtimeByDetailsResponse
	121, // 146: moviebooking.TheatreService.GetShowtimeByID:output_type -> moviebooking.GetShowtimeByIDResponse
	123, // 147: moviebooking.TheatreService.GetShowtimeByDetails:output_type -> moviebooking.GetShowtimeByDetailsResponse
	125, // 148: moviebooking.TheatreService.UpdateShowtime:output_type -> moviebooking.UpdateShowtimeResponse
	127, // 149: moviebooking.TheatreService.ListShowtimes:output_type -> moviebooking.ListShowtimesResponse
	2,   // 150: moviebooking.TheatreService.AddMovieSchedule:output_type -> moviebooking.AddMovieScheduleResponse
	4,   // 151: moviebooking.TheatreService.UpdateMovieSchedule:output_type -> moviebooking.UpdateMovieScheduleResponse
	6,   // 152: moviebooking.TheatreService.GetAllMovieSchedules:output_type -> moviebooking.GetAllMovieScheduleResponse
	8,   // 153: moviebooking.TheatreService.GetMovieScheduleByMovieID:output_type -> moviebooking.GetMovieScheduleByMovieIdResponse
	10,  // 154: moviebooking.TheatreService.GetMovieScheduleByTheaterID:output_type -> moviebooking.GetMovieScheduleByTheaterIdResponse
	12,  // 155: moviebooking.TheatreService.GetMovieScheduleByMovieIdAndTheaterId:output_type -> moviebooking.GetMovieScheduleByMovieIdAndTheaterIdResponse
	14,  // 156: moviebooking.TheatreService.GetMovieScheduleByMovieIdAndShowTimeId:output_type -> moviebooking.GetMovieScheduleByMovieIdAndShowTimeIdResponse
	16,  // 157: moviebooking.TheatreService.GetGetMovieScheduleByTheaterIdAndShowTimeId:output_type -> moviebooking.GetGetMovieScheduleByTheaterIdAndShowTimeIdResponse
	18,  // 158: moviebooking.TheatreService.GetMovieScheduleByID:output_type -> moviebooking.GetMovieScheduleByIDResponse
	20,  // 159: moviebooking.TheatreService.DeleteMovieScheduleById:output_type -> moviebooking.DeleteMovieScheduleByIdResponse
	22,  // 160: moviebooking.TheatreService.DeleteMovieScheduleByMovieIdAndTheaterId:output_type -> moviebooking.DeleteMovieScheduleByMovieIdAndTheaterIdResponse
	24,  // 161: moviebooking.TheatreService.DeleteMovieScheduleByMovieIdAndTheaterIdAndShowTimeId:output_type -> moviebooking.DeleteMovieScheduleByMovieIdAndTheaterIdAndShowTimeIdResponse
	102, // [102:162] is the sub-list for method output_type
	42,  // [42:102] is the sub-list for method input_type
	42,  // [42:42] is the sub-list for extension type_name
	42,  // [42:42] is the sub-list for extension extendee
	0,   // [0:42] is the sub-list for field type_name
}

func init() { file_movie_booking_movie_booking_proto_init() }
func file_movie_booking_movie_booking_proto_init() {
	if File_movie_booking_movie_booking_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_movie_booking_movie_booking_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*MovieSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AddMovieScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*AddMovieScheduleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateMovieScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateMovieScheduleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllMovieScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllMovieScheduleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetMovieScheduleByMovieIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetMovieScheduleByMovieIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GetMovieScheduleByTheaterIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetMovieScheduleByTheaterIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GetMovieScheduleByMovieIdAndTheaterIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GetMovieScheduleByMovieIdAndTheaterIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*GetMovieScheduleByMovieIdAndShowTimeIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*GetMovieScheduleByMovieIdAndShowTimeIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*GetGetMovieScheduleByTheaterIdAndShowTimeIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GetGetMovieScheduleByTheaterIdAndShowTimeIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GetMovieScheduleByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*GetMovieScheduleByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteMovieScheduleByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteMovieScheduleByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteMovieScheduleByMovieIdAndTheaterIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteMovieScheduleByMovieIdAndTheaterIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteMovieScheduleByMovieIdAndTheaterIdAndShowTimeIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteMovieScheduleByMovieIdAndTheaterIdAndShowTimeIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*RegisterMovieRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*RegisterMovieResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateMovieRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateMovieResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*ListMoviesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*Movie); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*ListMoviesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*GetMovieDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*GetMovieDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteMovieRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteMovieResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*Theater); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*AddTheaterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*AddTheaterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteTheaterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteTheaterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteTheaterByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteTheaterByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*GetTheaterByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*GetTheaterByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*GetTheaterByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*GetTheaterByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateTheaterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateTheaterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*ListTheatersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*ListTheatersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*GetTheatersByAdminIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*GetTheatersByAdminIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*AddTheaterTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*AddTheaterTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[55].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteTheaterTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[56].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteTheaterTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[57].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteTheaterTypeByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[58].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteTheaterTypeByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[59].Exporter = func(v any, i int) any {
			switch v := v.(*GetTheaterTypeByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[60].Exporter = func(v any, i int) any {
			switch v := v.(*GetTheaterTypeByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[61].Exporter = func(v any, i int) any {
			switch v := v.(*TheaterType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[62].Exporter = func(v any, i int) any {
			switch v := v.(*GetTheaterTypeByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[63].Exporter = func(v any, i int) any {
			switch v := v.(*GetTheaterTypeBynameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[64].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateTheaterTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[65].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateTheaterTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[66].Exporter = func(v any, i int) any {
			switch v := v.(*ListTheaterTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[67].Exporter = func(v any, i int) any {
			switch v := v.(*ListTheaterTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[68].Exporter = func(v any, i int) any {
			switch v := v.(*AddScreenTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[69].Exporter = func(v any, i int) any {
			switch v := v.(*AddScreenTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[70].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteScreenTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[71].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteScreenTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[72].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteScreenTypeByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[73].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteScreenTypeByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[74].Exporter = func(v any, i int) any {
			switch v := v.(*GetScreenTypeByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[75].Exporter = func(v any, i int) any {
			switch v := v.(*GetScreenTypeByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[76].Exporter = func(v any, i int) any {
			switch v := v.(*ScreenType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[77].Exporter = func(v any, i int) any {
			switch v := v.(*GetScreenTypeByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[78].Exporter = func(v any, i int) any {
			switch v := v.(*GetScreenTypeByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[79].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateScreenTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[80].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateScreenTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[81].Exporter = func(v any, i int) any {
			switch v := v.(*ListScreenTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[82].Exporter = func(v any, i int) any {
			switch v := v.(*ListScreenTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[83].Exporter = func(v any, i int) any {
			switch v := v.(*SeatCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[84].Exporter = func(v any, i int) any {
			switch v := v.(*AddSeatCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[85].Exporter = func(v any, i int) any {
			switch v := v.(*AddSeatCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[86].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteSeatCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[87].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteSeatCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[88].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteSeatCategoryByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[89].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteSeatCategoryByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[90].Exporter = func(v any, i int) any {
			switch v := v.(*GetSeatCategoryByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[91].Exporter = func(v any, i int) any {
			switch v := v.(*GetSeatCategoryByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[92].Exporter = func(v any, i int) any {
			switch v := v.(*GetSeatCategoryByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[93].Exporter = func(v any, i int) any {
			switch v := v.(*GetSeatCategoryByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[94].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSeatCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[95].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSeatCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[96].Exporter = func(v any, i int) any {
			switch v := v.(*ListSeatCategoriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[97].Exporter = func(v any, i int) any {
			switch v := v.(*ListSeatCategoriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[98].Exporter = func(v any, i int) any {
			switch v := v.(*TheaterScreen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[99].Exporter = func(v any, i int) any {
			switch v := v.(*AddTheaterScreenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[100].Exporter = func(v any, i int) any {
			switch v := v.(*AddTheaterScreenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[101].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteTheaterScreenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[102].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteTheaterScreenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[103].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteTheaterScreenByNumberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[104].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteTheaterScreenByNumberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[105].Exporter = func(v any, i int) any {
			switch v := v.(*GetTheaterScreenByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[106].Exporter = func(v any, i int) any {
			switch v := v.(*GetTheaterScreenByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[107].Exporter = func(v any, i int) any {
			switch v := v.(*GetTheaterScreenByNumberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[108].Exporter = func(v any, i int) any {
			switch v := v.(*GetTheaterScreenByNumberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[109].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateTheaterScreenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[110].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateTheaterScreenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[111].Exporter = func(v any, i int) any {
			switch v := v.(*ListTheaterScreensRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[112].Exporter = func(v any, i int) any {
			switch v := v.(*ListTheaterScreensResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[113].Exporter = func(v any, i int) any {
			switch v := v.(*Showtime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[114].Exporter = func(v any, i int) any {
			switch v := v.(*AddShowtimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[115].Exporter = func(v any, i int) any {
			switch v := v.(*AddShowtimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[116].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteShowtimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[117].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteShowtimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[118].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteShowtimeByDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[119].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteShowtimeByDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[120].Exporter = func(v any, i int) any {
			switch v := v.(*GetShowtimeByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[121].Exporter = func(v any, i int) any {
			switch v := v.(*GetShowtimeByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[122].Exporter = func(v any, i int) any {
			switch v := v.(*GetShowtimeByDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[123].Exporter = func(v any, i int) any {
			switch v := v.(*GetShowtimeByDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[124].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateShowtimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[125].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateShowtimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[126].Exporter = func(v any, i int) any {
			switch v := v.(*ListShowtimesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[127].Exporter = func(v any, i int) any {
			switch v := v.(*ListShowtimesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_movie_booking_movie_booking_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   128,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_movie_booking_movie_booking_proto_goTypes,
		DependencyIndexes: file_movie_booking_movie_booking_proto_depIdxs,
		MessageInfos:      file_movie_booking_movie_booking_proto_msgTypes,
	}.Build()
	File_movie_booking_movie_booking_proto = out.File
	file_movie_booking_movie_booking_proto_rawDesc = nil
	file_movie_booking_movie_booking_proto_goTypes = nil
	file_movie_booking_movie_booking_proto_depIdxs = nil
}

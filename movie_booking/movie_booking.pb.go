// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: movie_booking/movie_booking.proto

package movie_booking

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Movie related messages
type RegisterMovieRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string  `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Duration    int32   `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	Genre       string  `protobuf:"bytes,4,opt,name=genre,proto3" json:"genre,omitempty"`
	ReleaseDate string  `protobuf:"bytes,5,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	Rating      float32 `protobuf:"fixed32,6,opt,name=rating,proto3" json:"rating,omitempty"`
	Language    string  `protobuf:"bytes,7,opt,name=Language,proto3" json:"Language,omitempty"`
}

func (x *RegisterMovieRequest) Reset() {
	*x = RegisterMovieRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterMovieRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterMovieRequest) ProtoMessage() {}

func (x *RegisterMovieRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterMovieRequest.ProtoReflect.Descriptor instead.
func (*RegisterMovieRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterMovieRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RegisterMovieRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RegisterMovieRequest) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *RegisterMovieRequest) GetGenre() string {
	if x != nil {
		return x.Genre
	}
	return ""
}

func (x *RegisterMovieRequest) GetReleaseDate() string {
	if x != nil {
		return x.ReleaseDate
	}
	return ""
}

func (x *RegisterMovieRequest) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *RegisterMovieRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type RegisterMovieResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieId uint32 `protobuf:"varint,1,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RegisterMovieResponse) Reset() {
	*x = RegisterMovieResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterMovieResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterMovieResponse) ProtoMessage() {}

func (x *RegisterMovieResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterMovieResponse.ProtoReflect.Descriptor instead.
func (*RegisterMovieResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterMovieResponse) GetMovieId() uint32 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

func (x *RegisterMovieResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UpdateMovieRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieId     uint32  `protobuf:"varint,1,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
	Title       string  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Duration    int32   `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	Genre       string  `protobuf:"bytes,5,opt,name=genre,proto3" json:"genre,omitempty"`
	ReleaseDate string  `protobuf:"bytes,6,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	Rating      float32 `protobuf:"fixed32,7,opt,name=rating,proto3" json:"rating,omitempty"`
	Language    string  `protobuf:"bytes,8,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *UpdateMovieRequest) Reset() {
	*x = UpdateMovieRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMovieRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMovieRequest) ProtoMessage() {}

func (x *UpdateMovieRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMovieRequest.ProtoReflect.Descriptor instead.
func (*UpdateMovieRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateMovieRequest) GetMovieId() uint32 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

func (x *UpdateMovieRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateMovieRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateMovieRequest) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *UpdateMovieRequest) GetGenre() string {
	if x != nil {
		return x.Genre
	}
	return ""
}

func (x *UpdateMovieRequest) GetReleaseDate() string {
	if x != nil {
		return x.ReleaseDate
	}
	return ""
}

func (x *UpdateMovieRequest) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *UpdateMovieRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type UpdateMovieResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateMovieResponse) Reset() {
	*x = UpdateMovieResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMovieResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMovieResponse) ProtoMessage() {}

func (x *UpdateMovieResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMovieResponse.ProtoReflect.Descriptor instead.
func (*UpdateMovieResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateMovieResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListMoviesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *ListMoviesRequest) Reset() {
	*x = ListMoviesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMoviesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMoviesRequest) ProtoMessage() {}

func (x *ListMoviesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMoviesRequest.ProtoReflect.Descriptor instead.
func (*ListMoviesRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{4}
}

func (x *ListMoviesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListMoviesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type Movie struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieId     uint32  `protobuf:"varint,1,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
	Title       string  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Duration    int32   `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	Genre       string  `protobuf:"bytes,5,opt,name=genre,proto3" json:"genre,omitempty"`
	ReleaseDate string  `protobuf:"bytes,6,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	Rating      float32 `protobuf:"fixed32,7,opt,name=rating,proto3" json:"rating,omitempty"`
	Language    string  `protobuf:"bytes,8,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *Movie) Reset() {
	*x = Movie{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Movie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Movie) ProtoMessage() {}

func (x *Movie) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Movie.ProtoReflect.Descriptor instead.
func (*Movie) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{5}
}

func (x *Movie) GetMovieId() uint32 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

func (x *Movie) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Movie) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Movie) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Movie) GetGenre() string {
	if x != nil {
		return x.Genre
	}
	return ""
}

func (x *Movie) GetReleaseDate() string {
	if x != nil {
		return x.ReleaseDate
	}
	return ""
}

func (x *Movie) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *Movie) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type ListMoviesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Movies []*Movie `protobuf:"bytes,1,rep,name=movies,proto3" json:"movies,omitempty"`
}

func (x *ListMoviesResponse) Reset() {
	*x = ListMoviesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMoviesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMoviesResponse) ProtoMessage() {}

func (x *ListMoviesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMoviesResponse.ProtoReflect.Descriptor instead.
func (*ListMoviesResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{6}
}

func (x *ListMoviesResponse) GetMovies() []*Movie {
	if x != nil {
		return x.Movies
	}
	return nil
}

type GetMovieDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieId uint32 `protobuf:"varint,1,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
}

func (x *GetMovieDetailsRequest) Reset() {
	*x = GetMovieDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMovieDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMovieDetailsRequest) ProtoMessage() {}

func (x *GetMovieDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMovieDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetMovieDetailsRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{7}
}

func (x *GetMovieDetailsRequest) GetMovieId() uint32 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

type GetMovieDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Movie *Movie `protobuf:"bytes,1,opt,name=movie,proto3" json:"movie,omitempty"`
}

func (x *GetMovieDetailsResponse) Reset() {
	*x = GetMovieDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMovieDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMovieDetailsResponse) ProtoMessage() {}

func (x *GetMovieDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMovieDetailsResponse.ProtoReflect.Descriptor instead.
func (*GetMovieDetailsResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{8}
}

func (x *GetMovieDetailsResponse) GetMovie() *Movie {
	if x != nil {
		return x.Movie
	}
	return nil
}

type DeleteMovieRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieId uint32 `protobuf:"varint,1,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
}

func (x *DeleteMovieRequest) Reset() {
	*x = DeleteMovieRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMovieRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMovieRequest) ProtoMessage() {}

func (x *DeleteMovieRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMovieRequest.ProtoReflect.Descriptor instead.
func (*DeleteMovieRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteMovieRequest) GetMovieId() uint32 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

type DeleteMovieResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteMovieResponse) Reset() {
	*x = DeleteMovieResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMovieResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMovieResponse) ProtoMessage() {}

func (x *DeleteMovieResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMovieResponse.ProtoReflect.Descriptor instead.
func (*DeleteMovieResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteMovieResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RegisterTheatreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Location        string `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	NumberOfScreens int32  `protobuf:"varint,3,opt,name=number_of_screens,json=numberOfScreens,proto3" json:"number_of_screens,omitempty"`
	OwnerId         uint32 `protobuf:"varint,4,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
}

func (x *RegisterTheatreRequest) Reset() {
	*x = RegisterTheatreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterTheatreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterTheatreRequest) ProtoMessage() {}

func (x *RegisterTheatreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterTheatreRequest.ProtoReflect.Descriptor instead.
func (*RegisterTheatreRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{11}
}

func (x *RegisterTheatreRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterTheatreRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *RegisterTheatreRequest) GetNumberOfScreens() int32 {
	if x != nil {
		return x.NumberOfScreens
	}
	return 0
}

func (x *RegisterTheatreRequest) GetOwnerId() uint32 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

type RegisterTheatreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheatreId uint32 `protobuf:"varint,1,opt,name=theatre_id,json=theatreId,proto3" json:"theatre_id,omitempty"`
	Message   string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RegisterTheatreResponse) Reset() {
	*x = RegisterTheatreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterTheatreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterTheatreResponse) ProtoMessage() {}

func (x *RegisterTheatreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterTheatreResponse.ProtoReflect.Descriptor instead.
func (*RegisterTheatreResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{12}
}

func (x *RegisterTheatreResponse) GetTheatreId() uint32 {
	if x != nil {
		return x.TheatreId
	}
	return 0
}

func (x *RegisterTheatreResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UpdateTheatreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheatreId       uint32 `protobuf:"varint,1,opt,name=theatre_id,json=theatreId,proto3" json:"theatre_id,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Location        string `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	NumberOfScreens int32  `protobuf:"varint,4,opt,name=number_of_screens,json=numberOfScreens,proto3" json:"number_of_screens,omitempty"`
	OwnerId         uint32 `protobuf:"varint,5,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
}

func (x *UpdateTheatreRequest) Reset() {
	*x = UpdateTheatreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTheatreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTheatreRequest) ProtoMessage() {}

func (x *UpdateTheatreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTheatreRequest.ProtoReflect.Descriptor instead.
func (*UpdateTheatreRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateTheatreRequest) GetTheatreId() uint32 {
	if x != nil {
		return x.TheatreId
	}
	return 0
}

func (x *UpdateTheatreRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateTheatreRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *UpdateTheatreRequest) GetNumberOfScreens() int32 {
	if x != nil {
		return x.NumberOfScreens
	}
	return 0
}

func (x *UpdateTheatreRequest) GetOwnerId() uint32 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

type UpdateTheatreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateTheatreResponse) Reset() {
	*x = UpdateTheatreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTheatreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTheatreResponse) ProtoMessage() {}

func (x *UpdateTheatreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTheatreResponse.ProtoReflect.Descriptor instead.
func (*UpdateTheatreResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateTheatreResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteTheatreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheatreId uint32 `protobuf:"varint,1,opt,name=theatre_id,json=theatreId,proto3" json:"theatre_id,omitempty"`
}

func (x *DeleteTheatreRequest) Reset() {
	*x = DeleteTheatreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTheatreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTheatreRequest) ProtoMessage() {}

func (x *DeleteTheatreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTheatreRequest.ProtoReflect.Descriptor instead.
func (*DeleteTheatreRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteTheatreRequest) GetTheatreId() uint32 {
	if x != nil {
		return x.TheatreId
	}
	return 0
}

type DeleteTheatreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteTheatreResponse) Reset() {
	*x = DeleteTheatreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTheatreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTheatreResponse) ProtoMessage() {}

func (x *DeleteTheatreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTheatreResponse.ProtoReflect.Descriptor instead.
func (*DeleteTheatreResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteTheatreResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Theater types replated messages
type AddTheaterTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheaterTypeName string `protobuf:"bytes,1,opt,name=theater_type_name,json=theaterTypeName,proto3" json:"theater_type_name,omitempty"`
}

func (x *AddTheaterTypeRequest) Reset() {
	*x = AddTheaterTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTheaterTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTheaterTypeRequest) ProtoMessage() {}

func (x *AddTheaterTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTheaterTypeRequest.ProtoReflect.Descriptor instead.
func (*AddTheaterTypeRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{17}
}

func (x *AddTheaterTypeRequest) GetTheaterTypeName() string {
	if x != nil {
		return x.TheaterTypeName
	}
	return ""
}

type AddTheaterTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddTheaterTypeResponse) Reset() {
	*x = AddTheaterTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTheaterTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTheaterTypeResponse) ProtoMessage() {}

func (x *AddTheaterTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTheaterTypeResponse.ProtoReflect.Descriptor instead.
func (*AddTheaterTypeResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{18}
}

func (x *AddTheaterTypeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteTheaterTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheaterTypeId int32 `protobuf:"varint,1,opt,name=theater_type_id,json=theaterTypeId,proto3" json:"theater_type_id,omitempty"`
}

func (x *DeleteTheaterTypeRequest) Reset() {
	*x = DeleteTheaterTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTheaterTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTheaterTypeRequest) ProtoMessage() {}

func (x *DeleteTheaterTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTheaterTypeRequest.ProtoReflect.Descriptor instead.
func (*DeleteTheaterTypeRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteTheaterTypeRequest) GetTheaterTypeId() int32 {
	if x != nil {
		return x.TheaterTypeId
	}
	return 0
}

type DeleteTheaterTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteTheaterTypeResponse) Reset() {
	*x = DeleteTheaterTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTheaterTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTheaterTypeResponse) ProtoMessage() {}

func (x *DeleteTheaterTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTheaterTypeResponse.ProtoReflect.Descriptor instead.
func (*DeleteTheaterTypeResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteTheaterTypeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteTheaterTypeByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteTheaterTypeByNameRequest) Reset() {
	*x = DeleteTheaterTypeByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTheaterTypeByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTheaterTypeByNameRequest) ProtoMessage() {}

func (x *DeleteTheaterTypeByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTheaterTypeByNameRequest.ProtoReflect.Descriptor instead.
func (*DeleteTheaterTypeByNameRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteTheaterTypeByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteTheaterTypeByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteTheaterTypeByNameResponse) Reset() {
	*x = DeleteTheaterTypeByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTheaterTypeByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTheaterTypeByNameResponse) ProtoMessage() {}

func (x *DeleteTheaterTypeByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTheaterTypeByNameResponse.ProtoReflect.Descriptor instead.
func (*DeleteTheaterTypeByNameResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteTheaterTypeByNameResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetTheaterTypeByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheaterTypeId int32 `protobuf:"varint,1,opt,name=theater_type_id,json=theaterTypeId,proto3" json:"theater_type_id,omitempty"`
}

func (x *GetTheaterTypeByIDRequest) Reset() {
	*x = GetTheaterTypeByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTheaterTypeByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTheaterTypeByIDRequest) ProtoMessage() {}

func (x *GetTheaterTypeByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTheaterTypeByIDRequest.ProtoReflect.Descriptor instead.
func (*GetTheaterTypeByIDRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{23}
}

func (x *GetTheaterTypeByIDRequest) GetTheaterTypeId() int32 {
	if x != nil {
		return x.TheaterTypeId
	}
	return 0
}

type GetTheaterTypeByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheaterType *TheaterType `protobuf:"bytes,1,opt,name=theater_type,json=theaterType,proto3" json:"theater_type,omitempty"`
}

func (x *GetTheaterTypeByIDResponse) Reset() {
	*x = GetTheaterTypeByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTheaterTypeByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTheaterTypeByIDResponse) ProtoMessage() {}

func (x *GetTheaterTypeByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTheaterTypeByIDResponse.ProtoReflect.Descriptor instead.
func (*GetTheaterTypeByIDResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{24}
}

func (x *GetTheaterTypeByIDResponse) GetTheaterType() *TheaterType {
	if x != nil {
		return x.TheaterType
	}
	return nil
}

type TheaterType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TheaterTypeName string `protobuf:"bytes,2,opt,name=theater_type_name,json=theaterTypeName,proto3" json:"theater_type_name,omitempty"`
}

func (x *TheaterType) Reset() {
	*x = TheaterType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TheaterType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TheaterType) ProtoMessage() {}

func (x *TheaterType) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TheaterType.ProtoReflect.Descriptor instead.
func (*TheaterType) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{25}
}

func (x *TheaterType) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TheaterType) GetTheaterTypeName() string {
	if x != nil {
		return x.TheaterTypeName
	}
	return ""
}

type GetTheaterTypeByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetTheaterTypeByNameRequest) Reset() {
	*x = GetTheaterTypeByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTheaterTypeByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTheaterTypeByNameRequest) ProtoMessage() {}

func (x *GetTheaterTypeByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTheaterTypeByNameRequest.ProtoReflect.Descriptor instead.
func (*GetTheaterTypeByNameRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{26}
}

func (x *GetTheaterTypeByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetTheaterTypeBynameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheaterType *TheaterType `protobuf:"bytes,1,opt,name=theater_type,json=theaterType,proto3" json:"theater_type,omitempty"`
}

func (x *GetTheaterTypeBynameResponse) Reset() {
	*x = GetTheaterTypeBynameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTheaterTypeBynameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTheaterTypeBynameResponse) ProtoMessage() {}

func (x *GetTheaterTypeBynameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTheaterTypeBynameResponse.ProtoReflect.Descriptor instead.
func (*GetTheaterTypeBynameResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{27}
}

func (x *GetTheaterTypeBynameResponse) GetTheaterType() *TheaterType {
	if x != nil {
		return x.TheaterType
	}
	return nil
}

type UpdateTheaterTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TheaterTypeName string `protobuf:"bytes,2,opt,name=theater_type_name,json=theaterTypeName,proto3" json:"theater_type_name,omitempty"`
}

func (x *UpdateTheaterTypeRequest) Reset() {
	*x = UpdateTheaterTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTheaterTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTheaterTypeRequest) ProtoMessage() {}

func (x *UpdateTheaterTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTheaterTypeRequest.ProtoReflect.Descriptor instead.
func (*UpdateTheaterTypeRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateTheaterTypeRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateTheaterTypeRequest) GetTheaterTypeName() string {
	if x != nil {
		return x.TheaterTypeName
	}
	return ""
}

type UpdateTheaterTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateTheaterTypeResponse) Reset() {
	*x = UpdateTheaterTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTheaterTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTheaterTypeResponse) ProtoMessage() {}

func (x *UpdateTheaterTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTheaterTypeResponse.ProtoReflect.Descriptor instead.
func (*UpdateTheaterTypeResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateTheaterTypeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListTheaterTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListTheaterTypesRequest) Reset() {
	*x = ListTheaterTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTheaterTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTheaterTypesRequest) ProtoMessage() {}

func (x *ListTheaterTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTheaterTypesRequest.ProtoReflect.Descriptor instead.
func (*ListTheaterTypesRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{30}
}

type ListTheaterTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheaterTypes []*TheaterType `protobuf:"bytes,1,rep,name=theater_types,json=theaterTypes,proto3" json:"theater_types,omitempty"`
}

func (x *ListTheaterTypeResponse) Reset() {
	*x = ListTheaterTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTheaterTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTheaterTypeResponse) ProtoMessage() {}

func (x *ListTheaterTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTheaterTypeResponse.ProtoReflect.Descriptor instead.
func (*ListTheaterTypeResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{31}
}

func (x *ListTheaterTypeResponse) GetTheaterTypes() []*TheaterType {
	if x != nil {
		return x.TheaterTypes
	}
	return nil
}

// Screen types related messages
type AddScreenTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScreenTypeName string `protobuf:"bytes,1,opt,name=screen_type_name,json=screenTypeName,proto3" json:"screen_type_name,omitempty"`
}

func (x *AddScreenTypeRequest) Reset() {
	*x = AddScreenTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddScreenTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddScreenTypeRequest) ProtoMessage() {}

func (x *AddScreenTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddScreenTypeRequest.ProtoReflect.Descriptor instead.
func (*AddScreenTypeRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{32}
}

func (x *AddScreenTypeRequest) GetScreenTypeName() string {
	if x != nil {
		return x.ScreenTypeName
	}
	return ""
}

type AddScreenTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddScreenTypeResponse) Reset() {
	*x = AddScreenTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddScreenTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddScreenTypeResponse) ProtoMessage() {}

func (x *AddScreenTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddScreenTypeResponse.ProtoReflect.Descriptor instead.
func (*AddScreenTypeResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{33}
}

func (x *AddScreenTypeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteScreenTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScreenTypeId int32 `protobuf:"varint,1,opt,name=screen_type_id,json=screenTypeId,proto3" json:"screen_type_id,omitempty"`
}

func (x *DeleteScreenTypeRequest) Reset() {
	*x = DeleteScreenTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteScreenTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteScreenTypeRequest) ProtoMessage() {}

func (x *DeleteScreenTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteScreenTypeRequest.ProtoReflect.Descriptor instead.
func (*DeleteScreenTypeRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{34}
}

func (x *DeleteScreenTypeRequest) GetScreenTypeId() int32 {
	if x != nil {
		return x.ScreenTypeId
	}
	return 0
}

type DeleteScreenTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteScreenTypeResponse) Reset() {
	*x = DeleteScreenTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteScreenTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteScreenTypeResponse) ProtoMessage() {}

func (x *DeleteScreenTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteScreenTypeResponse.ProtoReflect.Descriptor instead.
func (*DeleteScreenTypeResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{35}
}

func (x *DeleteScreenTypeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteScreenTypeByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteScreenTypeByNameRequest) Reset() {
	*x = DeleteScreenTypeByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteScreenTypeByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteScreenTypeByNameRequest) ProtoMessage() {}

func (x *DeleteScreenTypeByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteScreenTypeByNameRequest.ProtoReflect.Descriptor instead.
func (*DeleteScreenTypeByNameRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{36}
}

func (x *DeleteScreenTypeByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteScreenTypeByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteScreenTypeByNameResponse) Reset() {
	*x = DeleteScreenTypeByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteScreenTypeByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteScreenTypeByNameResponse) ProtoMessage() {}

func (x *DeleteScreenTypeByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteScreenTypeByNameResponse.ProtoReflect.Descriptor instead.
func (*DeleteScreenTypeByNameResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{37}
}

func (x *DeleteScreenTypeByNameResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetScreenTypeByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScreenTypeId int32 `protobuf:"varint,1,opt,name=screen_type_id,json=screenTypeId,proto3" json:"screen_type_id,omitempty"`
}

func (x *GetScreenTypeByIDRequest) Reset() {
	*x = GetScreenTypeByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScreenTypeByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScreenTypeByIDRequest) ProtoMessage() {}

func (x *GetScreenTypeByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScreenTypeByIDRequest.ProtoReflect.Descriptor instead.
func (*GetScreenTypeByIDRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{38}
}

func (x *GetScreenTypeByIDRequest) GetScreenTypeId() int32 {
	if x != nil {
		return x.ScreenTypeId
	}
	return 0
}

type GetScreenTypeByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScreenType *ScreenType `protobuf:"bytes,1,opt,name=screen_type,json=screenType,proto3" json:"screen_type,omitempty"`
}

func (x *GetScreenTypeByIDResponse) Reset() {
	*x = GetScreenTypeByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScreenTypeByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScreenTypeByIDResponse) ProtoMessage() {}

func (x *GetScreenTypeByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScreenTypeByIDResponse.ProtoReflect.Descriptor instead.
func (*GetScreenTypeByIDResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{39}
}

func (x *GetScreenTypeByIDResponse) GetScreenType() *ScreenType {
	if x != nil {
		return x.ScreenType
	}
	return nil
}

type ScreenType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ScreenTypeName string `protobuf:"bytes,2,opt,name=screen_type_name,json=screenTypeName,proto3" json:"screen_type_name,omitempty"`
}

func (x *ScreenType) Reset() {
	*x = ScreenType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScreenType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScreenType) ProtoMessage() {}

func (x *ScreenType) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScreenType.ProtoReflect.Descriptor instead.
func (*ScreenType) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{40}
}

func (x *ScreenType) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ScreenType) GetScreenTypeName() string {
	if x != nil {
		return x.ScreenTypeName
	}
	return ""
}

type GetScreenTypeByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetScreenTypeByNameRequest) Reset() {
	*x = GetScreenTypeByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScreenTypeByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScreenTypeByNameRequest) ProtoMessage() {}

func (x *GetScreenTypeByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScreenTypeByNameRequest.ProtoReflect.Descriptor instead.
func (*GetScreenTypeByNameRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{41}
}

func (x *GetScreenTypeByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetScreenTypeByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScreenType *ScreenType `protobuf:"bytes,1,opt,name=screen_type,json=screenType,proto3" json:"screen_type,omitempty"`
}

func (x *GetScreenTypeByNameResponse) Reset() {
	*x = GetScreenTypeByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScreenTypeByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScreenTypeByNameResponse) ProtoMessage() {}

func (x *GetScreenTypeByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScreenTypeByNameResponse.ProtoReflect.Descriptor instead.
func (*GetScreenTypeByNameResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{42}
}

func (x *GetScreenTypeByNameResponse) GetScreenType() *ScreenType {
	if x != nil {
		return x.ScreenType
	}
	return nil
}

type UpdateScreenTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ScreenTypeName string `protobuf:"bytes,2,opt,name=screen_type_name,json=screenTypeName,proto3" json:"screen_type_name,omitempty"`
}

func (x *UpdateScreenTypeRequest) Reset() {
	*x = UpdateScreenTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateScreenTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateScreenTypeRequest) ProtoMessage() {}

func (x *UpdateScreenTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateScreenTypeRequest.ProtoReflect.Descriptor instead.
func (*UpdateScreenTypeRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{43}
}

func (x *UpdateScreenTypeRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateScreenTypeRequest) GetScreenTypeName() string {
	if x != nil {
		return x.ScreenTypeName
	}
	return ""
}

type UpdateScreenTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateScreenTypeResponse) Reset() {
	*x = UpdateScreenTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateScreenTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateScreenTypeResponse) ProtoMessage() {}

func (x *UpdateScreenTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateScreenTypeResponse.ProtoReflect.Descriptor instead.
func (*UpdateScreenTypeResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{44}
}

func (x *UpdateScreenTypeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListScreenTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListScreenTypesRequest) Reset() {
	*x = ListScreenTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListScreenTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScreenTypesRequest) ProtoMessage() {}

func (x *ListScreenTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListScreenTypesRequest.ProtoReflect.Descriptor instead.
func (*ListScreenTypesRequest) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{45}
}

type ListScreenTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScreenTypes []*ScreenType `protobuf:"bytes,1,rep,name=screen_types,json=screenTypes,proto3" json:"screen_types,omitempty"`
}

func (x *ListScreenTypesResponse) Reset() {
	*x = ListScreenTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movie_booking_movie_booking_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListScreenTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScreenTypesResponse) ProtoMessage() {}

func (x *ListScreenTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_booking_movie_booking_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListScreenTypesResponse.ProtoReflect.Descriptor instead.
func (*ListScreenTypesResponse) Descriptor() ([]byte, []int) {
	return file_movie_booking_movie_booking_proto_rawDescGZIP(), []int{46}
}

func (x *ListScreenTypesResponse) GetScreenTypes() []*ScreenType {
	if x != nil {
		return x.ScreenTypes
	}
	return nil
}

var File_movie_booking_movie_booking_proto protoreflect.FileDescriptor

var file_movie_booking_movie_booking_proto_rawDesc = []byte{
	0x0a, 0x21, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2f,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x22, 0xd7, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67,
	0x65, 0x6e, 0x72, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x4c, 0x0a, 0x15, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xf0, 0x01, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x67, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x2f, 0x0a, 0x13,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x44, 0x0a,
	0x11, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x22, 0xe3, 0x01, 0x0a, 0x05, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x67, 0x65, 0x6e, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x65, 0x6e,
	0x72, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x41, 0x0a, 0x12, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2b, 0x0a, 0x06, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x52, 0x06, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x22, 0x33, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49,
	0x64, 0x22, 0x44, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x05,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x52, 0x05, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x22, 0x2f, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x8f, 0x01, 0x0a, 0x16, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f,
	0x66, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x17, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x68, 0x65, 0x61, 0x74, 0x72,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x68, 0x65, 0x61,
	0x74, 0x72, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0xac, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x72,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x68, 0x65, 0x61,
	0x74, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x68,
	0x65, 0x61, 0x74, 0x72, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x53, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x31,
	0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x35, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x68, 0x65,
	0x61, 0x74, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74,
	0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x43, 0x0a, 0x15, 0x41,
	0x64, 0x64, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x32, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x42, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x68,
	0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x26, 0x0a, 0x0f, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x68, 0x65, 0x61, 0x74,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x34, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3b, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x43, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x26, 0x0a, 0x0f, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x54, 0x68,
	0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x68, 0x65, 0x61, 0x74,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x49, 0x0a, 0x0b, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74,
	0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x31,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x5c, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x42, 0x79, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0b, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x56, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x74,
	0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x35, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x19,
	0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x59, 0x0a, 0x17, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x68, 0x65, 0x61, 0x74,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x74, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x22, 0x40, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x53, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10,
	0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x31, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x53, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3f, 0x0a, 0x17, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x18, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x33, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x40, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a,
	0x0e, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x39, 0x0a, 0x0b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0a, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x46, 0x0a, 0x0a, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x30, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x58, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0a, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x53, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x34, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x56, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3b, 0x0a, 0x0c, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x32, 0xc1, 0x03, 0x0a,
	0x0c, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x58, 0x0a,
	0x0d, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x12, 0x22,
	0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x12, 0x20, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x24, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0b,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x12, 0x20, 0x2e, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x32, 0xce, 0x0d, 0x0a, 0x0e, 0x54, 0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x5b, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x68, 0x65,
	0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x68, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x26, 0x2e, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x17, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x67, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x27, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x28, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x29, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x6e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x11, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x26, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x68, 0x65,
	0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x60, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x25, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x58, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x22, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x14,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x42, 0x79, 0x49, 0x44, 0x12, 0x25, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x2e,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x26, 0x2e,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x29, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x10, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25,
	0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a,
	0x0f, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x24, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a,
	0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x68, 0x65, 0x61, 0x74, 0x72, 0x65,
	0x12, 0x24, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x68,
	0x65, 0x61, 0x74, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a,
	0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x12, 0x22,
	0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x12, 0x22, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x68,
	0x65, 0x61, 0x74, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x2f, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_movie_booking_movie_booking_proto_rawDescOnce sync.Once
	file_movie_booking_movie_booking_proto_rawDescData = file_movie_booking_movie_booking_proto_rawDesc
)

func file_movie_booking_movie_booking_proto_rawDescGZIP() []byte {
	file_movie_booking_movie_booking_proto_rawDescOnce.Do(func() {
		file_movie_booking_movie_booking_proto_rawDescData = protoimpl.X.CompressGZIP(file_movie_booking_movie_booking_proto_rawDescData)
	})
	return file_movie_booking_movie_booking_proto_rawDescData
}

var file_movie_booking_movie_booking_proto_msgTypes = make([]protoimpl.MessageInfo, 47)
var file_movie_booking_movie_booking_proto_goTypes = []any{
	(*RegisterMovieRequest)(nil),            // 0: moviebooking.RegisterMovieRequest
	(*RegisterMovieResponse)(nil),           // 1: moviebooking.RegisterMovieResponse
	(*UpdateMovieRequest)(nil),              // 2: moviebooking.UpdateMovieRequest
	(*UpdateMovieResponse)(nil),             // 3: moviebooking.UpdateMovieResponse
	(*ListMoviesRequest)(nil),               // 4: moviebooking.ListMoviesRequest
	(*Movie)(nil),                           // 5: moviebooking.Movie
	(*ListMoviesResponse)(nil),              // 6: moviebooking.ListMoviesResponse
	(*GetMovieDetailsRequest)(nil),          // 7: moviebooking.GetMovieDetailsRequest
	(*GetMovieDetailsResponse)(nil),         // 8: moviebooking.GetMovieDetailsResponse
	(*DeleteMovieRequest)(nil),              // 9: moviebooking.DeleteMovieRequest
	(*DeleteMovieResponse)(nil),             // 10: moviebooking.DeleteMovieResponse
	(*RegisterTheatreRequest)(nil),          // 11: moviebooking.RegisterTheatreRequest
	(*RegisterTheatreResponse)(nil),         // 12: moviebooking.RegisterTheatreResponse
	(*UpdateTheatreRequest)(nil),            // 13: moviebooking.UpdateTheatreRequest
	(*UpdateTheatreResponse)(nil),           // 14: moviebooking.UpdateTheatreResponse
	(*DeleteTheatreRequest)(nil),            // 15: moviebooking.DeleteTheatreRequest
	(*DeleteTheatreResponse)(nil),           // 16: moviebooking.DeleteTheatreResponse
	(*AddTheaterTypeRequest)(nil),           // 17: moviebooking.AddTheaterTypeRequest
	(*AddTheaterTypeResponse)(nil),          // 18: moviebooking.AddTheaterTypeResponse
	(*DeleteTheaterTypeRequest)(nil),        // 19: moviebooking.DeleteTheaterTypeRequest
	(*DeleteTheaterTypeResponse)(nil),       // 20: moviebooking.DeleteTheaterTypeResponse
	(*DeleteTheaterTypeByNameRequest)(nil),  // 21: moviebooking.DeleteTheaterTypeByNameRequest
	(*DeleteTheaterTypeByNameResponse)(nil), // 22: moviebooking.DeleteTheaterTypeByNameResponse
	(*GetTheaterTypeByIDRequest)(nil),       // 23: moviebooking.GetTheaterTypeByIDRequest
	(*GetTheaterTypeByIDResponse)(nil),      // 24: moviebooking.GetTheaterTypeByIDResponse
	(*TheaterType)(nil),                     // 25: moviebooking.TheaterType
	(*GetTheaterTypeByNameRequest)(nil),     // 26: moviebooking.GetTheaterTypeByNameRequest
	(*GetTheaterTypeBynameResponse)(nil),    // 27: moviebooking.GetTheaterTypeBynameResponse
	(*UpdateTheaterTypeRequest)(nil),        // 28: moviebooking.UpdateTheaterTypeRequest
	(*UpdateTheaterTypeResponse)(nil),       // 29: moviebooking.UpdateTheaterTypeResponse
	(*ListTheaterTypesRequest)(nil),         // 30: moviebooking.ListTheaterTypesRequest
	(*ListTheaterTypeResponse)(nil),         // 31: moviebooking.ListTheaterTypeResponse
	(*AddScreenTypeRequest)(nil),            // 32: moviebooking.AddScreenTypeRequest
	(*AddScreenTypeResponse)(nil),           // 33: moviebooking.AddScreenTypeResponse
	(*DeleteScreenTypeRequest)(nil),         // 34: moviebooking.DeleteScreenTypeRequest
	(*DeleteScreenTypeResponse)(nil),        // 35: moviebooking.DeleteScreenTypeResponse
	(*DeleteScreenTypeByNameRequest)(nil),   // 36: moviebooking.DeleteScreenTypeByNameRequest
	(*DeleteScreenTypeByNameResponse)(nil),  // 37: moviebooking.DeleteScreenTypeByNameResponse
	(*GetScreenTypeByIDRequest)(nil),        // 38: moviebooking.GetScreenTypeByIDRequest
	(*GetScreenTypeByIDResponse)(nil),       // 39: moviebooking.GetScreenTypeByIDResponse
	(*ScreenType)(nil),                      // 40: moviebooking.ScreenType
	(*GetScreenTypeByNameRequest)(nil),      // 41: moviebooking.GetScreenTypeByNameRequest
	(*GetScreenTypeByNameResponse)(nil),     // 42: moviebooking.GetScreenTypeByNameResponse
	(*UpdateScreenTypeRequest)(nil),         // 43: moviebooking.UpdateScreenTypeRequest
	(*UpdateScreenTypeResponse)(nil),        // 44: moviebooking.UpdateScreenTypeResponse
	(*ListScreenTypesRequest)(nil),          // 45: moviebooking.ListScreenTypesRequest
	(*ListScreenTypesResponse)(nil),         // 46: moviebooking.ListScreenTypesResponse
}
var file_movie_booking_movie_booking_proto_depIdxs = []int32{
	5,  // 0: moviebooking.ListMoviesResponse.movies:type_name -> moviebooking.Movie
	5,  // 1: moviebooking.GetMovieDetailsResponse.movie:type_name -> moviebooking.Movie
	25, // 2: moviebooking.GetTheaterTypeByIDResponse.theater_type:type_name -> moviebooking.TheaterType
	25, // 3: moviebooking.GetTheaterTypeBynameResponse.theater_type:type_name -> moviebooking.TheaterType
	25, // 4: moviebooking.ListTheaterTypeResponse.theater_types:type_name -> moviebooking.TheaterType
	40, // 5: moviebooking.GetScreenTypeByIDResponse.screen_type:type_name -> moviebooking.ScreenType
	40, // 6: moviebooking.GetScreenTypeByNameResponse.screen_type:type_name -> moviebooking.ScreenType
	40, // 7: moviebooking.ListScreenTypesResponse.screen_types:type_name -> moviebooking.ScreenType
	0,  // 8: moviebooking.MovieService.RegisterMovie:input_type -> moviebooking.RegisterMovieRequest
	2,  // 9: moviebooking.MovieService.UpdateMovie:input_type -> moviebooking.UpdateMovieRequest
	4,  // 10: moviebooking.MovieService.ListMovies:input_type -> moviebooking.ListMoviesRequest
	7,  // 11: moviebooking.MovieService.GetMovieDetails:input_type -> moviebooking.GetMovieDetailsRequest
	9,  // 12: moviebooking.MovieService.DeleteMovie:input_type -> moviebooking.DeleteMovieRequest
	17, // 13: moviebooking.TheatreService.AddTheaterType:input_type -> moviebooking.AddTheaterTypeRequest
	19, // 14: moviebooking.TheatreService.DeleteTheaterTypeByID:input_type -> moviebooking.DeleteTheaterTypeRequest
	21, // 15: moviebooking.TheatreService.DeleteTheaterTypeByName:input_type -> moviebooking.DeleteTheaterTypeByNameRequest
	23, // 16: moviebooking.TheatreService.GetTheaterTypeByID:input_type -> moviebooking.GetTheaterTypeByIDRequest
	26, // 17: moviebooking.TheatreService.GetTheaterTypeByName:input_type -> moviebooking.GetTheaterTypeByNameRequest
	28, // 18: moviebooking.TheatreService.UpdateTheaterType:input_type -> moviebooking.UpdateTheaterTypeRequest
	30, // 19: moviebooking.TheatreService.ListTheaterTypes:input_type -> moviebooking.ListTheaterTypesRequest
	32, // 20: moviebooking.TheatreService.AddScreenType:input_type -> moviebooking.AddScreenTypeRequest
	34, // 21: moviebooking.TheatreService.DeleteScreenTypeByID:input_type -> moviebooking.DeleteScreenTypeRequest
	36, // 22: moviebooking.TheatreService.DeleteScreenTypeByName:input_type -> moviebooking.DeleteScreenTypeByNameRequest
	38, // 23: moviebooking.TheatreService.GetScreenTypeByID:input_type -> moviebooking.GetScreenTypeByIDRequest
	41, // 24: moviebooking.TheatreService.GetScreenTypeByName:input_type -> moviebooking.GetScreenTypeByNameRequest
	43, // 25: moviebooking.TheatreService.UpdateScreenType:input_type -> moviebooking.UpdateScreenTypeRequest
	45, // 26: moviebooking.TheatreService.ListScreenTypes:input_type -> moviebooking.ListScreenTypesRequest
	11, // 27: moviebooking.TheatreService.RegisterTheatre:input_type -> moviebooking.RegisterTheatreRequest
	13, // 28: moviebooking.TheatreService.UpdateTheatre:input_type -> moviebooking.UpdateTheatreRequest
	15, // 29: moviebooking.TheatreService.DeleteTheatre:input_type -> moviebooking.DeleteTheatreRequest
	1,  // 30: moviebooking.MovieService.RegisterMovie:output_type -> moviebooking.RegisterMovieResponse
	3,  // 31: moviebooking.MovieService.UpdateMovie:output_type -> moviebooking.UpdateMovieResponse
	6,  // 32: moviebooking.MovieService.ListMovies:output_type -> moviebooking.ListMoviesResponse
	8,  // 33: moviebooking.MovieService.GetMovieDetails:output_type -> moviebooking.GetMovieDetailsResponse
	10, // 34: moviebooking.MovieService.DeleteMovie:output_type -> moviebooking.DeleteMovieResponse
	18, // 35: moviebooking.TheatreService.AddTheaterType:output_type -> moviebooking.AddTheaterTypeResponse
	20, // 36: moviebooking.TheatreService.DeleteTheaterTypeByID:output_type -> moviebooking.DeleteTheaterTypeResponse
	22, // 37: moviebooking.TheatreService.DeleteTheaterTypeByName:output_type -> moviebooking.DeleteTheaterTypeByNameResponse
	24, // 38: moviebooking.TheatreService.GetTheaterTypeByID:output_type -> moviebooking.GetTheaterTypeByIDResponse
	27, // 39: moviebooking.TheatreService.GetTheaterTypeByName:output_type -> moviebooking.GetTheaterTypeBynameResponse
	29, // 40: moviebooking.TheatreService.UpdateTheaterType:output_type -> moviebooking.UpdateTheaterTypeResponse
	31, // 41: moviebooking.TheatreService.ListTheaterTypes:output_type -> moviebooking.ListTheaterTypeResponse
	33, // 42: moviebooking.TheatreService.AddScreenType:output_type -> moviebooking.AddScreenTypeResponse
	35, // 43: moviebooking.TheatreService.DeleteScreenTypeByID:output_type -> moviebooking.DeleteScreenTypeResponse
	37, // 44: moviebooking.TheatreService.DeleteScreenTypeByName:output_type -> moviebooking.DeleteScreenTypeByNameResponse
	39, // 45: moviebooking.TheatreService.GetScreenTypeByID:output_type -> moviebooking.GetScreenTypeByIDResponse
	42, // 46: moviebooking.TheatreService.GetScreenTypeByName:output_type -> moviebooking.GetScreenTypeByNameResponse
	44, // 47: moviebooking.TheatreService.UpdateScreenType:output_type -> moviebooking.UpdateScreenTypeResponse
	46, // 48: moviebooking.TheatreService.ListScreenTypes:output_type -> moviebooking.ListScreenTypesResponse
	12, // 49: moviebooking.TheatreService.RegisterTheatre:output_type -> moviebooking.RegisterTheatreResponse
	14, // 50: moviebooking.TheatreService.UpdateTheatre:output_type -> moviebooking.UpdateTheatreResponse
	16, // 51: moviebooking.TheatreService.DeleteTheatre:output_type -> moviebooking.DeleteTheatreResponse
	30, // [30:52] is the sub-list for method output_type
	8,  // [8:30] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_movie_booking_movie_booking_proto_init() }
func file_movie_booking_movie_booking_proto_init() {
	if File_movie_booking_movie_booking_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_movie_booking_movie_booking_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*RegisterMovieRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*RegisterMovieResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateMovieRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateMovieResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ListMoviesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Movie); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ListMoviesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetMovieDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetMovieDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteMovieRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteMovieResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*RegisterTheatreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*RegisterTheatreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateTheatreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateTheatreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteTheatreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteTheatreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*AddTheaterTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*AddTheaterTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteTheaterTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteTheaterTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteTheaterTypeByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteTheaterTypeByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*GetTheaterTypeByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*GetTheaterTypeByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*TheaterType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*GetTheaterTypeByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*GetTheaterTypeBynameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateTheaterTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateTheaterTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*ListTheaterTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*ListTheaterTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*AddScreenTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*AddScreenTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteScreenTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteScreenTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteScreenTypeByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteScreenTypeByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*GetScreenTypeByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*GetScreenTypeByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*ScreenType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*GetScreenTypeByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*GetScreenTypeByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateScreenTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateScreenTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*ListScreenTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movie_booking_movie_booking_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*ListScreenTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_movie_booking_movie_booking_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   47,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_movie_booking_movie_booking_proto_goTypes,
		DependencyIndexes: file_movie_booking_movie_booking_proto_depIdxs,
		MessageInfos:      file_movie_booking_movie_booking_proto_msgTypes,
	}.Build()
	File_movie_booking_movie_booking_proto = out.File
	file_movie_booking_movie_booking_proto_rawDesc = nil
	file_movie_booking_movie_booking_proto_goTypes = nil
	file_movie_booking_movie_booking_proto_depIdxs = nil
}

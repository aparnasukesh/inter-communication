syntax = "proto3";

package payment;

option go_package = "./payment";

service PaymentService {
    rpc ProcessPayment(ProcessPaymentRequest) returns (ProcessPaymentResponse);
    rpc GetTransactionStatus(GetTransactionStatusRequest) returns (GetTransactionStatusResponse);
    rpc PaymentSuccess(PaymentSuccessRequest)returns (PaymentSuccessResponse);
    rpc PaymentFailure(PaymentFailureRequest)returns(PaymentFailureResponse);
}

message Transaction {
    int32 transaction_id = 1; 
    int32 booking_id = 2;      
    int32 user_id = 3;      
    int32 payment_method_id = 4; 
    string transaction_date = 5; 
    double amount = 6;    
    string order_id = 7;
    string status = 8;  
    string razorpay_payment_id = 9 ;
}

message ProcessPaymentRequest {
    int32 booking_id = 1; 
    int32 user_id = 2; 
    double amount = 3; 
    int32 payment_method_id = 4; 
}

message ProcessPaymentResponse {
    Transaction transaction = 1;
}

message GetTransactionStatusRequest {
    int32 transaction_id = 1; 
}

message GetTransactionStatusResponse {
    int32 transaction_id = 1;
    string status = 2; 
    double amount = 3; 
    int32 payment_method_id = 4; 
    string transaction_date = 5; 
}

message PaymentSuccessRequest{
    string order_id = 1;
    string razorpay_payment_id = 2;
    int32 booking_id = 3;
}

message PaymentSuccessResponse{
    
}

message PaymentFailureRequest{
    string order_id = 1;
    string razorpay_payment_id = 2;
    int32 booking_id = 3;
}

message PaymentFailureResponse{
    
}
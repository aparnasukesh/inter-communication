syntax = "proto3";

package useradmin;

option go_package = "./user_admin";

// User Service definition
service UserService {
    rpc RegisterUser (RegisterUserRequest) returns (RegisterUserResponse);
    rpc ValidateUser (ValidateUserRequest) returns (ValidateUserResponse);
    rpc LoginUser (LoginUserRequest) returns (LoginUserResponse);
    rpc GetUserProfile(GetProfileRequest) returns (GetProfileResponse);
    rpc UpdateUserProfile (UpdateUserProfileRequest) returns (UpdateUserProfileResponse);
}

// Admin Service definition
service AdminService {
    rpc RegisterAdmin (RegisterAdminRequest) returns (RegisterAdminResponse);
    rpc LoginAdmin(LoginAdminRequest) returns (LoginAdminResponse);
    rpc UpdateAdminProfile (UpdateAdminProfileRequest) returns (UpdateAdminProfileResponse);
}

// Super - Admin service definition
service SuperAdminService{
    // Admin
    rpc LoginSuperAdmin(LoginSuperAdminRequest) returns( LoginSuperAdminResponse);
    rpc ListAdminRequests(ListAdminRequestsRequest)returns(ListAdminRequestsResponse);
    rpc AdminApproval(AdminApprovalRequest) returns (AdminApprovalResponse);

    // Movies
    rpc RegisterMovie (RegisterMovieRequest) returns (RegisterMovieResponse);
    rpc UpdateMovie(UpdateMovieRequest) returns (UpdateMovieResponse);
    rpc ListMovies (ListMoviesRequest) returns (ListMoviesResponse);
    rpc GetMovieDetails(GetMovieDetailsRequest) returns (GetMovieDetailsResponse);
    rpc DeleteMovie (DeleteMovieRequest) returns (DeleteMovieResponse);

    // Theater type
    rpc AddTheaterType(AddTheaterTypeRequest)returns (AddTheaterTypeResponse);
    rpc DeleteTheaterTypeByID(DeleteTheaterTypeRequest)returns(DeleteTheaterTypeResponse);
    rpc DeleteTheaterTypeByName(DeleteTheaterTypeByNameRequest)returns (DeleteTheaterTypeByNameResponse);
    rpc GetTheaterTypeByID(GetTheaterTypeByIDRequest)returns (GetTheaterTypeByIDResponse);
    rpc GetTheaterTypeByName(GetTheaterTypeByNameRequest)returns(GetTheaterTypeBynameResponse);
    rpc UpdateTheaterType(UpdateTheaterTypeRequest)returns(UpdateTheaterTypeResponse);
    rpc ListTheaterTypes(ListTheaterTypesRequest)returns(ListTheaterTypeResponse);

     // Screen type
     rpc AddScreenType(AddScreenTypeRequest) returns (AddScreenTypeResponse);
     rpc DeleteScreenTypeByID(DeleteScreenTypeRequest) returns (DeleteScreenTypeResponse);
     rpc DeleteScreenTypeByName(DeleteScreenTypeByNameRequest) returns (DeleteScreenTypeByNameResponse);
     rpc GetScreenTypeByID(GetScreenTypeByIDRequest) returns (GetScreenTypeByIDResponse);
     rpc GetScreenTypeByName(GetScreenTypeByNameRequest) returns (GetScreenTypeByNameResponse);
     rpc UpdateScreenType(UpdateScreenTypeRequest) returns (UpdateScreenTypeResponse);
     rpc ListScreenTypes(ListScreenTypesRequest) returns (ListScreenTypesResponse);

    
}
// User related messages
message RegisterUserRequest {
    string username = 1;
    string password = 2;
    string phone = 3;
    string email = 4;
    string first_name = 5;
    string last_name = 6;
    string gender = 7;
}

message RegisterUserResponse {
    string status = 1;
    int32 status_code = 2;
}

message ValidateUserRequest {
    string email = 1;
    string otp = 2;
}

message ValidateUserResponse {
    string status = 1;
    int32 status_code = 2;
}

message LoginUserRequest {
    string email = 1;
    string password = 2;
}

message LoginUserResponse {
    string status = 1;
    int32 status_code = 2;
    string token = 3;
}

message UpdateUserProfileRequest {
    string username = 1;
    string phone = 2;
    string email = 3;
    string first_name = 4;
    string last_name = 5;
    string gender = 6;
    string date_of_birth = 7;
}

message UpdateUserProfileResponse {
    string status = 1;
    int32 status_code = 2;
}

message GetProfileRequest{
    int32 user_id = 1;
}

message GetProfileResponse{
    string status = 1;
    int32 status_code = 2;
    UpdateUserProfileRequest profile_details = 3;
}

// Admin related messages
message RegisterAdminRequest {
    string username = 1;
    string password = 2;
    string phone = 3;
    string email = 4;
    string first_name = 5;
    string last_name = 6;
    string gender = 7;
}

message RegisterAdminResponse {
    string status = 1;
    int32 status_code = 2;
}

message LoginAdminRequest{
    string email = 1;
    string password = 2;
}

message LoginAdminResponse{
    string status = 1;
    int32 status_code = 2;
    string token = 3;
}

message UpdateAdminProfileRequest {
    string username = 1;
    string phone = 2;
    string email = 3;
    string first_name = 4;
    string last_name = 5;
    string gender = 6;
    string date_of_birth = 7;
}

message UpdateAdminProfileResponse {
    string status = 1;
    int32 status_code = 2;
}

message LoginSuperAdminRequest{
    string email = 1;
    string password = 2 ;
}

message LoginSuperAdminResponse{
    string status = 1;
    int32 status_code = 2;
    string token = 3;
}

message AdminApprovalRequest{
    string email = 1;
    bool is_verified = 2;
}

message AdminApprovalResponse{
    string status = 1;
}

// super-admin related messages

message Email{
    string email = 1;
}

message ListAdminRequestsRequest{

}

message ListAdminRequestsResponse{
    repeated Email email = 1;
}

// super-admin, movies
message RegisterMovieRequest {
    string title = 1;
    string description = 2;
    int32 duration = 3; 
    string genre = 4;
    string release_date = 5; 
    float rating = 6;
    string Language = 7;
}

message RegisterMovieResponse {
    uint32 movie_id = 1;
    string message = 2;
}

message UpdateMovieRequest {
    uint32 movie_id = 1;
    string title = 2;
    string description = 3;
    int32 duration = 4;
    string genre = 5;
    string release_date = 6;
    float rating = 7;
    string language = 8;
}

message UpdateMovieResponse {
    string message = 1;
}

message ListMoviesRequest {
    int32 page = 1;
    int32 page_size = 2;
}

message Movie {
    uint32 movie_id = 1;
    string title = 2;
    string description = 3;
    int32 duration = 4;
    string genre = 5;
    string release_date = 6;
    float rating = 7;
    string language = 8;
}


message ListMoviesResponse {
    repeated Movie movies = 1;
}

message GetMovieDetailsRequest {
    uint32 movie_id = 1;
}

message GetMovieDetailsResponse {
    Movie movie = 1;
}

message DeleteMovieRequest {
    uint32 movie_id = 1;
}

message DeleteMovieResponse {
    string message = 1;
}

// super-admin theater type
message AddTheaterTypeRequest{
    string theater_type_name = 1;
}

message AddTheaterTypeResponse{
    string message = 1;
}

message DeleteTheaterTypeRequest{
    int32 theater_type_id = 1;
}

message DeleteTheaterTypeResponse{
    string message = 1 ;
}
message DeleteTheaterTypeByNameRequest{
    string name = 1;
}

message DeleteTheaterTypeByNameResponse{
    string message = 1;
}


message GetTheaterTypeByIDRequest{
    int32 theater_type_id = 1;
}

message GetTheaterTypeByIDResponse{
    TheaterType theater_type = 1;
}

message TheaterType{
    int32 id = 1;
    string theater_type_name = 2;
}

message GetTheaterTypeByNameRequest{
    string name = 1;
}

message GetTheaterTypeBynameResponse{
    TheaterType theater_type = 1;
}

message UpdateTheaterTypeRequest{
    int32 id =1;
    string theater_type_name = 2;
}

message UpdateTheaterTypeResponse{
    string message = 1;
}

message ListTheaterTypesRequest{
}

message ListTheaterTypeResponse{
    repeated TheaterType theater_types = 1;
}


// Screen types related messages
message AddScreenTypeRequest {
    string screen_type_name = 1;
}

message AddScreenTypeResponse {
    string message = 1;
}

message DeleteScreenTypeRequest {
    int32 screen_type_id = 1;
}

message DeleteScreenTypeResponse {
    string message = 1;
}

message DeleteScreenTypeByNameRequest {
    string name = 1;
}

message DeleteScreenTypeByNameResponse {
    string message = 1;
}

message GetScreenTypeByIDRequest {
    int32 screen_type_id = 1;
}

message GetScreenTypeByIDResponse {
    ScreenType screen_type = 1;
}

message ScreenType {
    int32 id = 1;
    string screen_type_name = 2;
}

message GetScreenTypeByNameRequest {
    string name = 1;
}

message GetScreenTypeByNameResponse {
    ScreenType screen_type = 1;
}

message UpdateScreenTypeRequest {
    int32 id = 1;
    string screen_type_name = 2;
}

message UpdateScreenTypeResponse {
    string message = 1;
}

message ListScreenTypesRequest {
}

message ListScreenTypesResponse {
    repeated ScreenType screen_types = 1;
}
